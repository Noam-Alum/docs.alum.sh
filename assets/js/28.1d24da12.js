(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{342:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"contribute-to-autopilot-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contribute-to-autopilot-script"}},[t._v("#")]),t._v(" "),a("img",{attrs:{src:"/images/AutoPilot-Icons/script.png",alt:"script image",width:"28",height:"auto"}}),t._v(" Contribute to AutoPilot script")]),t._v(" "),a("p",[a("strong",[t._v("In this page I will walk you trough how to contribute to AutoPilot script.")])]),t._v(" "),a("img",{staticStyle:{width:"900px",height:"auto"},attrs:{src:"/images/AutoPilot-contribute.png"}}),t._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),a("ol",[a("li",[t._v("AutoPilot "),a("a",{attrs:{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo",target:"_blank",rel:"noopener noreferrer"}},[t._v("forked"),a("OutboundLink")],1),t._v(" on your GitHub account.")]),t._v(" "),a("li",[t._v("Text editor.")]),t._v(" "),a("li",[t._v("Some sort of VM setup (optional).")])]),t._v(" "),a("h2",{attrs:{id:"make-changes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#make-changes"}},[t._v("#")]),t._v(" Make changes")]),t._v(" "),a("p",[t._v("There are several functions you need to know before making any changes:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("xecho:")]),a("br"),t._v("\nEvery time you want to "),a("code",[t._v("echo")]),t._v(" something you "),a("strong",[t._v("need")]),t._v(" to use the following format:"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("xecho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$[Choosen prefix] <biw>[Text data]<biw>"')]),t._v("\n")])])]),t._v("Here are all the prefixes variables available:\n"),a("ul",[a("li",[a("code",[t._v("$info_prefix")]),t._v(" - Anything that doesnt indicate something.")]),t._v(" "),a("li",[a("code",[t._v("$good_prefix")]),t._v(" - Something good happend.")]),t._v(" "),a("li",[a("code",[t._v("$notgood_prefix")]),t._v(" - Something not good happend but nothing crucial happend.")]),t._v(" "),a("li",[a("code",[t._v("$bad_prefix")]),t._v(" - Something bad happend. (e.g. an error)\n"),a("strong",[t._v("For example")]),t._v(":"),a("br"),t._v("\nIf I wanted to notify the user that what ever I wanted to happend succeeded, I would use something like this:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("xecho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$good_prefix")]),t._v(' <biw>What ever I wanted to happen happend.</biw>"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("For extended explenation on the "),a("code",[t._v("xecho")]),t._v(" function, refer "),a("a",{attrs:{href:"https://docs.alum.sh/utils.sh/functions/xecho.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("You still have to format all text to be bold intense white.")])])])]),t._v(" "),a("li",[a("strong",[t._v("fail:")]),a("br"),t._v("\nWhen you want to exit the script, you would have to cal the "),a("code",[t._v("fail")]),t._v(" function.\nHere's the syntax:"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("fail "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("EXIT CODE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[TEXT DATA]"')]),t._v("\n")])])]),t._v("For example:"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("fail "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"File not found."')]),t._v("\n")])])])]),t._v(" "),a("li",[a("strong",[t._v("check_dependencies:")]),a("br"),t._v("\nWhen you want to install a new dependencie for what ever reason, you would use "),a("code",[t._v("check_dependencies")]),t._v(":"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("check_dependencies "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[Dependency name]"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$notgood_prefix")]),t._v(' <biw>[TEXT DATA]</biw>"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[CMD TO INSTALL]"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[TEST AFTER INSTALL]"')]),t._v("\n")])])]),t._v("For example:"),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("check_dependencies "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"network-manager"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$notgood_prefix")]),t._v(' <biw>Dependency missing, trying to install network-manager.</biw>"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apt install -yq network-manager &> /dev/null"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"which nmcli"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("I "),a("strong",[t._v("do not")]),t._v(" recommend adding dependencies to AutoPilot.")])])]),t._v(" "),a("li",[a("strong",[t._v("parse_yaml:")]),a("br"),t._v("\nLike you probably know, AutoPilot uses "),a("em",[t._v("YAML")]),t._v(" for its configuration files, this fuction is meant for you to parse new YAML easly.\n"),a("ol",[a("li",[a("p",[t._v("Extract Keys from a List or Dictionary:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml keys "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sub_key"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("yaml_path")])]),t._v(": Path to the YAML list or dictionary.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("sub_key")])]),t._v(": Sub-key within the items to extract (optional).")])]),t._v(" "),a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml keys "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"items"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v("\n")])])]),a("p",[t._v("This command will list all names in the "),a("code",[t._v("items")]),t._v(" list to STDOUT.")])]),t._v(" "),a("li",[a("p",[t._v("Extract a Single Value:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml_path"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("yaml_path")])]),t._v(": Path to the YAML value.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELinux"')]),t._v("\n")])])]),a("p",[t._v("This command retrieves the value at "),a("code",[t._v("SELinux")]),t._v(" and assigns it to a variable named like the "),a("code",[t._v("yaml_path")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Extract a List of Values to an Array:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml_path"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("yaml_path")])]),t._v(": Path to the YAML list.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"names"')]),t._v("\n")])])]),a("p",[t._v("This command extracts all items from "),a("code",[t._v("names")]),t._v(" and stores them in an array named like the "),a("code",[t._v("yaml_path")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Extract Key-Value Pairs to an Associative Array:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value_path"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("yaml_path")])]),t._v(": Path to the YAML list.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("key_path")])]),t._v(": Path to the key within the items.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("value_path")])]),t._v(": Path to the value associated with each key.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"items"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n")])])]),a("p",[t._v("This command extracts key-value pairs where the keys are from "),a("code",[t._v("name")]),t._v(" and the values are from "),a("code",[t._v("value")]),t._v(", storing them in an associative array named like the "),a("code",[t._v("yaml_path")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Extract Key-Value Pairs with Two Values per Key:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2_path"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("yaml_path")])]),t._v(": Path to the YAML list.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("key_path")])]),t._v(": Path to the key within the items.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("value1_path")])]),t._v(": Path to the first value associated with each key.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("value2_path")])]),t._v(": Path to the second value associated with each key.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config.items"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2"')]),t._v("\n")])])]),a("p",[t._v("This command extracts key-value pairs where each key from "),a("code",[t._v("name")]),t._v(" has two associated values from "),a("code",[t._v("value1")]),t._v(" and "),a("code",[t._v("value2")]),t._v("."),a("br"),t._v("\nTo access the data use something like this:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" Installed_packages name "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("Installed_packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IP_keys")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Installed_packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Ev")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\[(0|1)\\]'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("pkg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IP_keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("pkg_type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${Installed_packages["')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$pkg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("pkg_source")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${Installed_packages["')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$pkg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("This was the YAML:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Installed_packages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Installed_packages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" AnyName\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deb/Pkg/Sh\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deb name/Package url/Script url\n")])])])])]),t._v(" "),a("li",[a("p",[t._v("Extract Key-Value Pairs with Three Values per Key:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yaml_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value3_path"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[a("code",[t._v("yaml_path")])]),t._v(": Path to the YAML list.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("key_path")])]),t._v(": Path to the key within the items.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("value1_path")])]),t._v(": Path to the first value associated with each key.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("value2_path")])]),t._v(": Path to the second value associated with each key.")]),t._v(" "),a("li",[a("strong",[a("code",[t._v("value3_path")])]),t._v(": Path to the third value associated with each key.")])]),t._v(" "),a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config.items"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value3"')]),t._v("\n")])])]),a("p",[t._v("This command extracts key-value pairs where each key from "),a("code",[t._v("name")]),t._v(" has three associated values from "),a("code",[t._v("value1")]),t._v(", "),a("code",[t._v("value2")]),t._v(", and "),a("code",[t._v("value3")]),t._v("."),a("br"),t._v("\nTo access the data use something like this:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" Users name pass group shell\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ne")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("U_keys")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Ev")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\[(0|1|2)\\]'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${U_keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("userpass")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${Users["')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("usergrp")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${Users["')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("usershell")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${Users["')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("This was the YAML:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" USERNAME\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PASSWORD/%Gen%\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" GROUP1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("GROUP2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("GROUP3\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /path/to/shell\n")])])])])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("In general AutoPilot uses "),a("a",{attrs:{href:"https://github.com/Noam-Alum/utils.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("utils.sh"),a("OutboundLink")],1),t._v(" heavily, it is recommend that you learn how to use its functions before adding something to AutoPilot. ("),a("a",{attrs:{href:"https://docs.alum.sh/utils.sh/Introduction.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Link to docs"),a("OutboundLink")],1),t._v(")")])]),t._v(" "),a("p",[t._v("Now that you know the basic functions needed to add/change something in AutoPilot, you need to understand the stracture of AutoPilot.")]),t._v(" "),a("p",[t._v("Since AutoPilot revolves around directives each directive has its own function with the same name, but with a prefix of "),a("code",[t._v("rn_")]),t._v(" ("),a("code",[t._v("rn_el")]),t._v(" for RHEL version of a function), for example:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SomeDirective")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Yes\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## SomeDirective")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("rn_SomeDirective")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" SomeDirective\n    xecho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info_prefix")]),t._v(" <biw>Called SomeDirective, "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SomeDirective")]),t._v('. {{ E-smile }}</biw>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("rn_el_SomeDirective")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    parse_yaml "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" SomeDirective\n    xecho "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info_prefix")]),t._v(" <biw>Called SomeDirective, "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$SomeDirective")]),t._v('. {{ E-smile }}</biw>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("That is so it can be called when it is mentioned in the configuration file via this part of the script:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Execute functions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=~")]),t._v(" ^"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Running_OS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Running_OS")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Debian"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n      rn_"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n      rn_el_"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Naming a function like a directive in the configuration file (With the "),a("code",[t._v("rn_")]),t._v(" prefix) only calls the function, to also retrieve any data from the directive use the "),a("code",[t._v("parse_yaml")]),t._v(" function.")])]),t._v(" "),a("h2",{attrs:{id:"test-changes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-changes"}},[t._v("#")]),t._v(" Test changes")]),t._v(" "),a("p",[t._v("Test the newly added changes by running the script either on your personal computer (if applicable) or a virtual machine.")]),t._v(" "),a("p",[t._v("It's highly recommended to use some form of VM setup, to not harm your personal environment.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("I would suggest using "),a("a",{attrs:{href:"https://www.vagrantup.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vagrant"),a("OutboundLink")],1),t._v(", as it enables the creation of lightweight, reproducible, and portable development environments.")])]),t._v(" "),a("p",[t._v("Using a VM also enables me as the developer a way to recreate the exact circomstances you had while encountering an issue/bug, so you could ask for a helping hand 😁.")]),t._v(" "),a("h2",{attrs:{id:"send-a-pr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#send-a-pr"}},[t._v("#")]),t._v(" Send a PR")]),t._v(" "),a("p",[t._v("After making changes to the AutoPilot script, push to your AutoPilot fork then send a PR with detailed explenation of the changes you've made or any other valuable information, for example:")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Added Users directive")]),t._v("\n\nI've added the Users directive, It's responsable for adding users.\n\nHere's the syntax for the configuration file:\nUsers:\n  "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" name: USERNAME\n    pass: PASSWORD/%Gen%\n    group: GROUP1,GROUP2,GROUP3\n    shell: /path/to/shell\n\nFor example:\n Users:\n    "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" name: Noam\n      pass: 1234\n      group: Noam,sudo,admins\n      shell: /bin/bash\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("###")]),t._v(" Notes")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" one\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" two\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" three\n")])])]),a("hr"),t._v(" "),a("br"),t._v(" "),a("p",[a("strong",[t._v("Huge thank you to anyone willing to contribute! 🙏")])])])}),[],!1,null,null,null);a.default=n.exports}}]);