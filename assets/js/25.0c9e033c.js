(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{308:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"script-breakdown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-breakdown"}},[a._v("#")]),a._v(" script breakdown")]),a._v(" "),s("blockquote",[s("p",[a._v("This page strictly refers to the make_backup_d.sh script")])]),a._v(" "),s("details",[s("summary",[a._v("make_backup_d.sh:")]),a._v(" "),s("iframe",{attrs:{src:"https://gitcodeembedder.blogspot.com/?gh=Noam-Alum/make_backup/main/opt/make_backup/make_backup_d.sh&lang=bash",width:"100%",height:"700px",frameborder:"0"}})]),a._v(" "),s("h2",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[a._v("#")]),a._v(" Functions")]),a._v(" "),s("p",[a._v("These are the functions used in the Make Backup Demon:")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#addlog"}},[a._v("AddLog")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#handleerror"}},[a._v("HandleError")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#get-binary"}},[a._v("get_binary")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#read-config"}},[a._v("read_config")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#keep-backups"}},[a._v("keep_backups")])])]),a._v(" "),s("h3",{attrs:{id:"addlog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#addlog"}},[a._v("#")]),a._v(" AddLog")]),a._v(" "),s("p",[a._v("The AddLog function is meant to log to the log file via "),s("code",[a._v("rsyslog")]),a._v(" using the "),s("code",[a._v("logger")]),a._v(" command."),s("br"),a._v("\nHere is the function itself:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("AddLog")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# VARS")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v('"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shift")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Message")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$*")]),a._v('"')]),a._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# get binaries")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# search for binary")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" logger"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set command to full path to binary")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("logger")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" logger"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# try running the command if so use it as is")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("elif")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("logger "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("logger")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"logger"')]),a._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# binary dependency missing exiting")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("    \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# EXIT")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$logger")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" local0.info "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"['),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$Tag")]),a._v(']"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$Message")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("Now because the "),s("a",{attrs:{href:"#get-binary"}},[a._v("get_binary")]),a._v(" function uses the "),s("code",[a._v("AddLog")]),a._v(" function the search for binary needs to happen in the "),s("code",[a._v("AddLog")]),a._v(" function manually."),s("br"),a._v("\nAfter locating the logger commands full path to the binary we send an "),s("strong",[a._v("info")]),a._v(" level log message to the "),s("strong",[a._v("local0")]),a._v(" facility with the Tag (first argument/$1) and the message (all other arguments/$*)")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("AddLog TEST this is a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" the AddLog "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v("\n")])])]),s("p",[a._v("Results:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("noam@noam:~âž¤ tail -1 /var/log/make_backup.log \nApr 18 04:40:10 noam [TEST]: this is a test for the AddLog function\n")])])]),s("h3",{attrs:{id:"handleerror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#handleerror"}},[a._v("#")]),a._v(" HandleError")]),a._v(" "),s("p",[a._v("The HandleError function is meant to catch and report failed bash commands using the "),s("a",{attrs:{href:"#addlog"}},[a._v("AddLog")]),a._v(" function and "),s("code",[a._v("trap")]),a._v("."),s("br"),a._v("\nHandleError:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("HandleError")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ExitCode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$?")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ErrorMessage")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BASH_COMMAND")]),a._v(" exited with status "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ExitCode")]),a._v('"')]),a._v("\n    AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ErrorMessage")]),a._v('"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("trap")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HandleError'")]),a._v(" ERR\n")])])]),s("p",[a._v("The "),s("code",[a._v("trap 'HandleError' ERR")]),a._v(" line ensures that each error (non-zero exit status) occurs within the scope where the trap is active would trigger the HandleError function.")]),a._v(" "),s("h3",{attrs:{id:"get-binary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-binary"}},[a._v("#")]),a._v(" get_binary")]),a._v(" "),s("p",[a._v("get_binary finds and sets as a variable the full path to a command to ensure operation of the script in any environment (if it even exists)."),s("br"),a._v("\nFor example, the "),s("code",[a._v("ls")]),a._v(" command:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ls")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/usr/bin/ls'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-al")]),a._v("\ntotal "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\ndrwxrwxr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" noam noam "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" Apr "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(" 04:58 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\ndrwxrwxr-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" noam noam "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4096")]),a._v(" Apr "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(" 04:58 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("p",[a._v("The actual function:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("get_binary")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("trap")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HandleError'")]),a._v(" ERR\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# list all binaries")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("mbn_commands")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rmdir"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"find"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"date"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"sed"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"awk"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tr"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"sort"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"tail"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rm"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ls"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mkdir"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"head"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rsync"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"echo"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# get binaries")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("binary")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${mbn_commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# search for binary")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" $binary"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set command to full path to binary")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$binary")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" $binary"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# try running the command if so use it as is")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("elif")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$binary "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v("/dev/null"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$binary")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$binary")]),a._v('"')]),a._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# binary dependency missing exiting")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG--help")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"binary dependency missing '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$binary")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v(' exiting."')]),a._v("\n            \n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# EXIT")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("One thing you can notice is that it traps the "),s("a",{attrs:{href:"#handleerror"}},[a._v("HandleError")]),a._v(" function to catch errors!")])]),a._v(" "),s("p",[a._v("The mbn_commands ("),s("strong",[a._v("m")]),a._v("ake "),s("strong",[a._v("b")]),a._v("ackup "),s("strong",[a._v("n")]),a._v("ew) array contains the commands used in the script so they can be set as a variable with the full path to its binary.")]),a._v(" "),s("p",[a._v("Then the for loop passes every command and checks using the "),s("code",[a._v("which")]),a._v(" command what is the full path to the binary and if it found it it sets it as the value of the commands variable, if which couldn't find the full path to the binary but the command can be used set the value of the command variable as the commands name, else log this incident (using the "),s("a",{attrs:{href:"#addlog"}},[a._v("AddLog")]),a._v(" function) and exit.")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# lets say mbn_commands is equal to ("ls" "mkdir")')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls was found by which, mkdir wasn't.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ls")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/usr/bin/ls'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("mkdir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mkdir'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ls")]),a._v(" is going to be used as ls and equal to: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ls")]),a._v("\n\\"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$mkdir")]),a._v(" is going to be used as mkdir and equal to: "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$mkdir")]),a._v('"')]),a._v("\n")])])]),s("p",[a._v("Results:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ls")]),a._v(" is going to be used as "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" and equal to: /usr/bin/ls\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$mkdir")]),a._v(" is going to be used as "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" and equal to: "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v("\n")])])]),s("h3",{attrs:{id:"read-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#read-config"}},[a._v("#")]),a._v(" read_config")]),a._v(" "),s("p",[a._v("read_config was built to read and set as variables the directives set in the "),s("code",[a._v("/etc/make_backup/make_backup.conf")]),a._v(" file ("),s("RouterLink",{attrs:{to:"/Make-backup/usage.html"}},[a._v("explained here")]),a._v(").")],1),a._v(" "),s("p",[a._v("read_config:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("read_config")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### GET BINARY")]),a._v("\n    get_binary\n\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("trap")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HandleError'")]),a._v(" ERR\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## GET LIST ALL NEEDED ITEMS")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Items")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$cat /etc/make_backup/make_backup.conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $sed "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/> start items to backup <$/,/> end items to backup <$/{//!p}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$Items")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" error "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" reading items to backup, exiting.\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## GET CONF VARS")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("conf_vars")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"count_location"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fallback_directory"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bd_count"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"backup_in_c_month"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"backup_in_month"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"month_in_c_year"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"month_in_year"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"rm_old_backups"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BACKUP_dir"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("c_var")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${conf_vars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$c_var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$awk "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("cvar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$c_var")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\"'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'$1 ~ cvar {print $2}'")]),a._v(" /etc/make_backup/make_backup.conf"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$c_var")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" error "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" allocating "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$c_var")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('", exiting.\n            '),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## CHECK")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# COUNT FILE")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" count "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v('"')]),a._v(" could not be used, exiting.\n        "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## BACKUP DIR")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# SET BACKUP_dir to fallback_directory to avoid crashing")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BACKUP_dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# set old backup removal to no")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("rm_old_backups")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"no"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" No useable backup location, check /etc/make_backup/make_backup.conf "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" information. exiting.\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("Almost every function in the script uses the "),s("a",{attrs:{href:"#addlog"}},[a._v("AddLog")]),a._v(" and "),s("a",{attrs:{href:"#handleerror"}},[a._v("HandleError")]),a._v(" functions.")])]),a._v(" "),s("p",[a._v("After mapping the the commands to variables with the full path the their binaries using the "),s("a",{attrs:{href:"#get-binary"}},[a._v("get_binary")]),a._v(" function the function first gets all the Items that the user whats to backup (if found non exit and log), then it runs trough each directive in the conf_vars array and phrases it to the actual value (set by user), then assigns it as a variable with the name of the directive.")]),a._v(" "),s("p",[a._v("Regularly the BACKUP_dir is set to the main backup directory, if it couldn't be used the fallback directory would be set as BACKUP_dir and the rm_old_backups directive would be set to "),s("strong",[a._v("no")]),a._v(".")]),a._v(" "),s("p",[a._v("For example:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# This (in the configuration file):")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("fallback_directory")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/tmp"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" start items to backup "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("\n/home/\n/tmp/\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" end items to backup "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Would turn to this:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("Items")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/home/ /tmp/"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("fallback_directory")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/tmp"')]),a._v("\n")])])]),s("h3",{attrs:{id:"keep-backups"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-backups"}},[a._v("#")]),a._v(" keep_backups")]),a._v(" "),s("p",[a._v("The keep_backups removes old backups based on the retention set in the configuration file.")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("keep_backups")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("trap")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HandleError'")]),a._v(" ERR\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### GET BINARY")]),a._v("\n    get_binary\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### READ CONFIG ####")]),a._v("\n    read_config\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF THERE ARE BACKUPS IN THE Laptop_backups DIR")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls $BACKUP_dir/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm_old_backups")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"yes"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GET BIGGEST YEAR")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("biggest_year")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls $BACKUP_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $sort "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GEt ALL YEARS DIRECTORIES")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("year_dir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v("/*\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF THIS IS THE BIGGEST YEAR")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$biggest_year")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# COUNT MONTHS")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("month_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GET BIGGEST MONTH")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("biggest_month")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls $year_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $sort "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GEt ALL MONTH DIRECTORIES")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("month_dir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/*\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("month_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $month_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF COUNT IS OVER month_in_year")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_in_c_year")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $year_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n                        AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CLEARED SPACE"')]),a._v(" removed old month directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $year_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"\n                    '),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n                    \n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF MONTH_DIR IS THE BIGGEST MONTH")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$biggest_month")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# COUNT BACKUPS")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("backup_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GEt ALL BACKUPS DIRECTORIES")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("backup")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/*\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ADD ONE TO COUNT")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("backup_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $backup_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v("\n\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF COUNT IS OVER backup_in_c_month")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$backup_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$backup_in_c_month")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# REAMOVE OLDEST BACKUP IN MONTH DIR")]),a._v("\n                                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $month_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n                                AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CLEARED SPACE"')]),a._v(" removed old backup directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $month_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"\n                            '),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# COUNT BACKUPS")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("backup_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GEt ALL BACKUPS DIRECTORIES")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("backup")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/*\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ADD ONE TO COUNT")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("backup_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $backup_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v("\n\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF COUNT IS OVER backup_in_c_month")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$backup_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$backup_in_month")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# REAMOVE OLDEST BACKUP IN MONTH DIR")]),a._v("\n                                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $month_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n                                AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CLEARED SPACE"')]),a._v(" removed old backup directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $month_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"\n                            '),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# COUNT MONTHS")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("month_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GEt ALL MONTH DIRECTORIES")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("month_dir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/*\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("month_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $month_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF COUNT IS OVER month_in_year")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_in_year")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $year_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n                        AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CLEARED SPACE"')]),a._v(" removed old month directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $year_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"\n                    '),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# COUNT BACKUPS")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("backup_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GEt ALL BACKUPS DIRECTORIES")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("backup")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/*\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ADD ONE TO COUNT")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("backup_count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $backup_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v("\n\n                        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK IF COUNT IS OVER backup_in_c_month")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$backup_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$backup_in_month")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# REAMOVE OLDEST BACKUP IN MONTH DIR")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $month_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n                            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CLEARED SPACE"')]),a._v(" removed old backup directory "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$ls "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("atime "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" $month_dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("2")]),a._v(">")]),a._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $tail "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"\n                        '),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("  \n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("I know this does not look the best, lets try to make it simpler to understand.")]),a._v(" "),s("p",[a._v("After calling read_config, get_binary and trapping HandleError the function proceeds to check if there are even any backups found in the current backup directory (main/fallback) and the rm_old_backups is set to "),s("strong",[a._v("yes")]),a._v(".")]),a._v(" "),s("p",[a._v("It has two sections:")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#year"}},[a._v("Year")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#month"}},[a._v("Month")])])])])]),a._v(" "),s("h4",{attrs:{id:"year"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#year"}},[a._v("#")]),a._v(" year")]),a._v(" "),s("p",[a._v("If the statement is true, the function for each year in the backup directory:")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("biggest year")]),a._v(" "),s("th",[a._v("any other year")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("Remove Months by the "),s("strong",[a._v("month_in_c_year")]),a._v(" directive")]),a._v(" "),s("td",[a._v("Remove Months by the "),s("strong",[a._v("month_in_year")]),a._v(" directive")])])])]),a._v(" "),s("h4",{attrs:{id:"month"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#month"}},[a._v("#")]),a._v(" month")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("Current month")]),a._v(" "),s("th",[a._v("any other month")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("Remove Backups by the "),s("strong",[a._v("backup_in_c_month")]),a._v(" directive")]),a._v(" "),s("td",[a._v("Remove Backups by the "),s("strong",[a._v("backup_in_month")]),a._v(" directive")])])])]),a._v(" "),s("h2",{attrs:{id:"main-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main-script"}},[a._v("#")]),a._v(" Main script")]),a._v(" "),s("p",[a._v("The main script listens for the accession when the count in the count file is equal to the value set in the "),s("strong",[a._v("bd_count")]),a._v(" directive and executes if so and listens for requests from the "),s("strong",[a._v("UDEV")]),a._v(" and checks if the count file is valid and if so adds 1 to the counter.")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### READ CONFIG ####")]),a._v("\n    read_config\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### GET BINARY")]),a._v("\n    get_binary\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### CATCH UDEV ####")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"UDEV"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-gt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bd_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# START COUNT")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'0'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"STARTING-COUNT"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"set count to '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("0"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v(" count file "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v(" was empty or above "),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bd_count")]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v('."')]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# EXIT")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("elif")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v('"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=~")]),a._v(" ^"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("-9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("+$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CHANGING-COUNT"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"changing count to '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cat $count_location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v('."')]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ADD COUNT")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("cat $count_location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# EXIT")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ERROR"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"count file '),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v(' is not numeric"')]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# EXIT")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### KEEP BACKUPS NEEDED ####")]),a._v("\n    keep_backups\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### CHECK IF COUNT IS BIGGER THAN 10 ####")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$cat $count_location"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-eq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bd_count")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("### START SCRIPT")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### READ CONFIG ####")]),a._v("\n            read_config\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## IF NOT EXIST CREATE YEAR AND MONTH DIRS")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# YEAR")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("year_dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$date "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'+%Y'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# MONTH")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("month_dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$date "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'+%m'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CHECK FOR BACKUPS IN fallback_directory")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" $fallback_directory "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ne")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n                AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MOVING BACKUPS"')]),a._v(" found old backups "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" fallback directory, moving them to main backup directory.\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rsync")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-av")]),a._v(" --remove-source-files --prune-empty-dirs "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v("/* "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$fallback_directory")]),a._v("/*\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## CREATE BACKUP DIRECTORY")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BACKUP_dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$year_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$month_dir")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$tr "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-dc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a-zA-Z0-9'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" /dev/random "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" $head "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("_"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("$date "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'+%d_%H_%M'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('/"')]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v('"')]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## BACKUP FILES")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BACKUP STARTED"')]),a._v(" backup started at "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BACKUPING FILES"')]),a._v(" started backuping files to "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("Item")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$Items")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# RSYNC")]),a._v("\n                AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BACKUPING ITEM"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$Item")]),a._v('"')]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$rsync")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-av")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--relative")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$Item")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&>")]),a._v(" /dev/null\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"FINISHED BACKUP"')]),a._v(" backup at "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BACKUP_dir")]),a._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$count_location")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# LOG")]),a._v("\n            AddLog "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"RESTORING COUNT"')]),a._v(" setting activation count to "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('"0'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v('".\n\n            '),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),s("p",[a._v("After reading the configuration file using the "),s("a",{attrs:{href:"#read-config"}},[a._v("read_config")]),a._v(" function and mapping the path to binary to variables using the "),s("a",{attrs:{href:"#get-binary"}},[a._v("get_binary")]),a._v(" function the main script does the following things:")]),a._v(" "),s("h4",{attrs:{id:"catch-udev"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#catch-udev"}},[a._v("#")]),a._v(" CATCH UDEV")]),a._v(" "),s("p",[a._v("the catch udev section is meant to catch calls from UDEV to add 1 to the counter."),s("br"),a._v("\nIt also checks for any errors with the counter file:")]),a._v(" "),s("ol",[s("li",[a._v("If file is empty.")]),a._v(" "),s("li",[a._v("If the count is over the "),s("strong",[a._v("bd_count")]),a._v(" directive.")]),a._v(" "),s("li",[a._v("If the file has non numeric contents.")])]),a._v(" "),s("h4",{attrs:{id:"keep-backups-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-backups-2"}},[a._v("#")]),a._v(" KEEP BACKUPS")]),a._v(" "),s("p",[a._v("Runs the "),s("a",{attrs:{href:"#keep-backups"}},[a._v("keep_backups")]),a._v(" function every 2 seconds (every while loop).")]),a._v(" "),s("h4",{attrs:{id:"check-if-count-is-bigger-than-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-if-count-is-bigger-than-10"}},[a._v("#")]),a._v(" CHECK IF COUNT IS BIGGER THAN 10")]),a._v(" "),s("p",[a._v("If the bd_count variable is bigger than the value in the count file then:")]),a._v(" "),s("ul",[s("li",[a._v("Sleep for 10 seconds to allow UDEV to mount the block device properly.")]),a._v(" "),s("li",[a._v("Create a backup year and month directories if not exist.")]),a._v(" "),s("li",[a._v("If found old backups in the fallback backup directory move then to the main backup directory.")]),a._v(" "),s("li",[a._v("Create the current backup backup directory with a prefix of random characters and numbers and postfix of the current day hour and minute (as the year and the month are in the path of the directory).")]),a._v(" "),s("li",[a._v("Backup all the items in the "),s("code",[a._v("$Items")]),a._v(" variable to the current backup directory.")]),a._v(" "),s("li",[a._v("reset the count file counter.")])]),a._v(" "),s("p",[a._v("Thats it.")]),a._v(" "),s("h2",{attrs:{id:"visual-explanation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visual-explanation"}},[a._v("#")]),a._v(" Visual explanation")]),a._v(" "),s("p",[s("img",{attrs:{src:"/images/make_backup_visual.png",alt:"image"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);