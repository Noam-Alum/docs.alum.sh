(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{347:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"create-an-autopilot-configuration-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-an-autopilot-configuration-file"}},[t._v("#")]),t._v(" Create an AutoPilot configuration file")]),t._v(" "),e("p",[e("strong",[t._v("In this guide I'll show you how to create a propper "),e("code",[t._v("AutoPilot")]),t._v(" configuration.")])]),t._v(" "),e("h3",{attrs:{id:"complexity-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#complexity-level"}},[t._v("#")]),t._v(" Complexity level")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("â—ˆ")]),t._v(" "),e("th",[t._v("â—ˆ")]),t._v(" "),e("th",[t._v("â—ˆ")]),t._v(" "),e("th",[t._v("â—‡")]),t._v(" "),e("th",[t._v("â—‡")]),t._v(" "),e("th",[t._v("â—‡")]),t._v(" "),e("th",[t._v("â—‡")]),t._v(" "),e("th",[t._v("â—‡")]),t._v(" "),e("th",[t._v("â—‡")]),t._v(" "),e("th",[t._v("â—‡")])])]),t._v(" "),e("tbody")]),t._v(" "),e("blockquote",[e("p",[t._v("Pretty simple ðŸ‘Œ")])]),t._v(" "),e("br"),t._v(" "),e("img",{staticStyle:{width:"900px",height:"auto"},attrs:{src:"/images/AutoPilot-HowTo.png"}}),t._v(" "),e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),e("ul",[e("li",[t._v("Fundamental understanding of "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/YAML",target:"_blank",rel:"noopener noreferrer"}},[t._v("YAML"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/Noam-Alum/AutoPilot/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AutoPilot"),e("OutboundLink")],1),t._v(" installed.")]),t._v(" "),e("li",[t._v("(Optional for testing) Some form of VM setup.")]),t._v(" "),e("li",[t._v("Any method for editing text.")])]),t._v(" "),e("h2",{attrs:{id:"identify-your-system-needs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#identify-your-system-needs"}},[t._v("#")]),t._v(" Identify your system needs")]),t._v(" "),e("p",[t._v("From my experience, there are two ways you can conclude your system needs.")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Firstly, if you plan to format your computer and want an easier way to return to your current setup (or close to it) or you want to prepare as a precaution an AutoPilot configuration file, you should take stock of everything you've customized, this includes any personalized settings, applications, or configurations you use dailyâ€”essentially, anything you've tailored to fit your specific needs.")])]),t._v(" "),e("li",[e("p",[t._v("Secondly, if you're looking for a fresh start and have a clear idea of what you want on your new system, or if you need to set up computers for your team (for example, specifying required software like Slack, AnyDesk, etc.).")])])]),t._v(" "),e("p",[t._v("It's important to document all your requirements so we can apply them later.")]),t._v(" "),e("h2",{attrs:{id:"aligning-directives-with-your-requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aligning-directives-with-your-requirements"}},[t._v("#")]),t._v(" Aligning directives with your requirements")]),t._v(" "),e("p",[t._v("After you concludded your requirements, you can start to align them with directives.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Click "),e("RouterLink",{attrs:{to:"/AutoPilot/Introduction.html#features"}},[t._v("here")]),t._v(" for all directives, or alternatively click on the "),e("strong",[t._v("Directives")]),t._v(" section on the sidebar. ("),e("code",[t._v("AutoPilot - It's simple")]),t._v(" --\x3e "),e("code",[t._v("Directives")]),t._v(")")],1)]),t._v(" "),e("h4",{attrs:{id:"for-example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-example"}},[t._v("#")]),t._v(" For example:")]),t._v(" "),e("p",[t._v("Lets say after a after assessing my needs I wrote the following requirements:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('# Noams requirements for a new system\n\nThis is a list of all the requirements noam wants on a new system.\n\n- Discord installed\n- Google chrome installed\n- User named noam - make him sudoer\n- SELinux disabled # I dont have the power to configure it ;)\n- These aliases for user noam:\n   alias hosts=\'/usr/local/bin/scripts/./host.sh\'\n   alias SRWP=\'/usr/local/bin/scripts/./SRWP.sh\' \n\n- This function in user noams bashrc:\n    function gc {\n\t    Cf=$(grep -rl "$1" /home/noam/.cache/google-chrome/)\n    \tif [ -n "$Cf" ]; then\n\t\t    echo -e "Found google-chrome cache files:\\n$Cf"\n\t    else\n\t\t    echo "No google-chrome cache files containing: $1"\n\t    fi\n    }\n')])])]),e("p",[t._v("We can clearly identify "),e("strong",[t._v("four")]),t._v(" directives that need to be used:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Directive")]),t._v(" "),e("th",[t._v("Requirements")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("RouterLink",{attrs:{to:"/AutoPilot/directives/Installed_packages.html"}},[t._v("Installed_packages")])],1),t._v(" "),e("td",[t._v("Install Discord and Google chrome")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/AutoPilot/directives/Users.html"}},[t._v("Users")])],1),t._v(" "),e("td",[t._v("Create user noam as a sudoer")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/AutoPilot/directives/SELinux.html"}},[t._v("SELinux")])],1),t._v(" "),e("td",[t._v("Disable SELinux")])]),t._v(" "),e("tr",[e("td",[e("RouterLink",{attrs:{to:"/AutoPilot/directives/Environment_configuration.html"}},[t._v("Environment_configuration")])],1),t._v(" "),e("td",[t._v("Add aliases and the gc function")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"create-the-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-the-configuration"}},[t._v("#")]),t._v(" Create the configuration")]),t._v(" "),e("p",[t._v("Now that we have the information we need, we can start writing the configuration file.")]),t._v(" "),e("p",[t._v("Lets to this step by step.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("You might want to add a headline to you configuration file, user "),e("code",[t._v("#")]),t._v(" to comment out anything in the configuration.")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is noams personal computer configuration.")]),t._v("\n\nLorem ipsum dolor sit amet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.\n")])])])]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("Installed_packages:")]),e("br"),t._v("\nWe know that we want to install Google chrome and Discord, I alredy know that both of them are installed using a deb file, so I need to collect the download links for both of them.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Discord")]),t._v(" "),e("th",[t._v("Google chrome")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://discord.com/api/download?platform=linux&format=deb",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://discord.com/api/download?platform=linux&format=deb"),e("OutboundLink")],1)]),t._v(" "),e("td",[e("a",{attrs:{href:"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"),e("OutboundLink")],1)])])])]),t._v(" "),e("p",[t._v("Then I need to implement this in YAML:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Installed_packages")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Discord\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pkg\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://discord.com/api/download?platform=linux&format=deb"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Chrome\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pkg\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"')]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("You can see that because this is an external package I used the "),e("em",[t._v("Pkg")]),t._v(" type and use the download link as the "),e("em",[t._v("source")]),t._v(".")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Users:")]),e("br"),t._v("\nI want to create a user named noam and make him a sudoer, and while we're at it lets choose to generate a strong password for him."),e("br"),t._v(" Now lets implement this in YAML:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" noam\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%Gen%"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" noam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sudo\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /bin/bash\n")])])]),e("blockquote",[e("p",[t._v("You can use "),e("code",[t._v("%Gen%")]),t._v(" to tell AutoPilot to generate a strong password for you!")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("SELinux:")]),e("br"),t._v("\nThis part is very simple, we just need to set SELinux to "),e("code",[t._v("Disabled")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SELinux")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Disabled\n")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Environment_configuration:")]),e("br"),t._v("\nFor this part I need to take the aliases and the function and put them one after another like so:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('alias hosts=\'/usr/local/bin/scripts/./host.sh\'\nalias SRWP=\'/usr/local/bin/scripts/./SRWP.sh\'\nfunction gc {\n    Cf=$(grep -rl "$1" /home/noam/.cache/google-chrome/)\n\tif [ -n "$Cf" ]; then\n\t    echo -e "Found google-chrome cache files:\\n$Cf"\n    else\n\t    echo "No google-chrome cache files containing: $1"\n    fi\n}\n')])])]),e("p",[t._v("As these lines are going to noams "),e("code",[t._v(".bashrc")]),t._v(" file. (Like I wanted)"),e("br"),t._v("\nLets  implement this in YAML:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Environment_configuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" noam\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      alias hosts='/usr/local/bin/scripts/./host.sh'\n      alias SRWP='/usr/local/bin/scripts/./SRWP.sh'\n      function gc {\n          Cf=$(grep -rl \"$1\" /home/noam/.cache/google-chrome/)")]),t._v("\n\t      if "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('n "$Cf" '),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("; then\n\t          echo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('e "Found google'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("chrome cache files"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('\\n$Cf"\n          else\n\t          '),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('echo "No google-chrome cache files containing')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' $1"\n          fi\n      '),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),e("br"),t._v(" "),e("p",[e("strong",[t._v("After implementing all your requirements in "),e("em",[t._v("YAML")]),t._v(" you should end up with something like this:")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is noams personal computer configuration.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Installed_packages")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Discord\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pkg\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://discord.com/api/download?platform=linux&format=deb"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Chrome\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pkg\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Users")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" noam\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pass")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%Gen%"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" noam"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sudo\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /bin/bash\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SELinux")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Disabled\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Environment_configuration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" noam\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n      alias hosts='/usr/local/bin/scripts/./host.sh'\n      alias SRWP='/usr/local/bin/scripts/./SRWP.sh'\n      function gc {\n          Cf=$(grep -rl \"$1\" /home/noam/.cache/google-chrome/)")]),t._v("\n\t      if "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('n "$Cf" '),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("; then\n\t          echo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('e "Found google'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("chrome cache files"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('\\n$Cf"\n          else\n\t          '),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('echo "No google-chrome cache files containing')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' $1"\n          fi\n      '),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("br")]),e("hr"),e("br"),e("p"),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("h2",{attrs:{id:"testing-optional"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testing-optional"}},[t._v("#")]),t._v(" Testing - optional")]),t._v(" "),e("p",[t._v("I highly recommend testing this "),e("strong",[t._v("AutoPilot")]),t._v(" configuration on a blank virtual machine with the operating system you plan to use in the future."),e("br"),t._v("\nThis will help you avoid any unexpected issues that might arise.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);