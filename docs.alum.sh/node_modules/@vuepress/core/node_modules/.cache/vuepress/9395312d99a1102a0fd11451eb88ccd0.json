{"remainingRequest":"/home/noam/Music/docs.alum.sh/node_modules/vue-loader/lib/index.js??ref--1-1!/home/noam/Music/docs.alum.sh/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/noam/Music/docs.alum.sh/docs/documentation/sbom-guide.md?vue&type=template&id=30a9aa94","dependencies":[{"path":"/home/noam/Music/docs.alum.sh/docs/documentation/sbom-guide.md","mtime":1713040223852},{"path":"/home/noam/Music/docs.alum.sh/node_modules/cache-loader/dist/cjs.js","mtime":1713040228777},{"path":"/home/noam/Music/docs.alum.sh/node_modules/cache-loader/dist/cjs.js","mtime":1713040228777},{"path":"/home/noam/Music/docs.alum.sh/node_modules/babel-loader/lib/index.js","mtime":1713040229657},{"path":"/home/noam/Music/docs.alum.sh/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1713040225420},{"path":"/home/noam/Music/docs.alum.sh/node_modules/cache-loader/dist/cjs.js","mtime":1713040228777},{"path":"/home/noam/Music/docs.alum.sh/node_modules/vue-loader/lib/index.js","mtime":1713040225420},{"path":"/home/noam/Music/docs.alum.sh/node_modules/@vuepress/markdown-loader/index.js","mtime":1713040223892}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGg2IGlkPSJsYXN0LXVwZGF0ZWQtMjAyMy0wMi0wMyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNsYXN0LXVwZGF0ZWQtMjAyMy0wMi0wMyI+IzwvYT4gTGFzdCB1cGRhdGVkOiAyMDIzLTAyLTAzPC9oNj4KPHA+wqA8L3A+CjxoMSBpZD0iYWxtYWxpbnV4LXNib20tdXNlci1ndWlkZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhbG1hbGludXgtc2JvbS11c2VyLWd1aWRlIj4jPC9hPiBBbG1hTGludXggU0JPTSBVc2VyIEd1aWRlPC9oMT4KPHA+wqA8L3A+CjxoMiBpZD0iaW50cm9kdWN0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2ludHJvZHVjdGlvbiI+IzwvYT4gSW50cm9kdWN0aW9uPC9oMj4KPGgzIGlkPSJhYm91dC1zYm9tIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Fib3V0LXNib20iPiM8L2E+IEFib3V0IDxlbT5TQk9NPC9lbT48L2gzPgo8cD48ZW0+U0JPTSAoU29mdHdhcmUgQmlsbCBvZiBNYXRlcmlhbHMpPC9lbT4gaXMgYSBsaXN0IG9mIGFsbCBvcGVuLXNvdXJjZSBhbmQgdGhpcmQtcGFydHkgY29tcG9uZW50cyB1c2VkIGluIGEgY29kZWJhc2UsIGFsb25nIHdpdGggdGhlaXIgbGljZW5zaW5nIGluZm9ybWF0aW9uLCB2ZXJzaW9uIG51bWJlcnMsIGFuZCBhbnkga25vd24gdnVsbmVyYWJpbGl0aWVzLjwvcD4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0FsbWFMaW51eC9idWlsZC1zeXN0ZW0iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkFsbWFMaW51eCBCdWlsZCBTeXN0ZW08T3V0Ym91bmRMaW5rLz48L2E+IGhhcyBpbXBsZW1lbnRlZCA8ZW0+U0JPTTwvZW0+IGludG8gaXRzIHBpcGVsaW5lIGZvciBzZWN1cml0eSBwdXJwb3Nlcywgc3VjaCBhcyB0cmFjaW5nIHRoZSBidWlsZCBwcm9jZXNzLCBlbnN1cmluZyB0aGF0IG9ubHkgdHJ1c3RlZCBzb3VyY2VzIGFyZSB1c2VkLCBhbmQgcmVkdWNpbmcgdGhlIHJpc2sgb2YgZGF0YSBjb3JydXB0aW9uLjwvcD4KPGgzIGlkPSJhYm91dC1jYXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWJvdXQtY2FzIj4jPC9hPiBBYm91dCA8ZW0+Q0FTPC9lbT48L2gzPgo8cD48YSBocmVmPSJodHRwczovL2Nhcy5jb2Rlbm90YXJ5LmNvbSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+PGVtPlRoZSBDb2Rlbm90YXJ5IENvbW11bml0eSBBdHRlc3RhdGlvbiBTZXJ2aWNlIChDQVMpPC9lbT48T3V0Ym91bmRMaW5rLz48L2E+IGlzIGludGVncmF0ZWQgd2l0aCBBbG1hTGludXggdG8gcHJvdmlkZSBhIGNoYWluIG9mIHRydXN0IGFuZCB0cmFjZWFiaWxpdHkuIEVhY2ggc3RhZ2Ugb2YgdGhlIGJ1aWxkIHByb2Nlc3MgZ29lcyB0aHJvdWdoIGF1dGhlbnRpY2F0aW9uIGFuZCBub3Rhcml6YXRpb24sIGFuZCBidWlsZCBhcnRpZmFjdHMgYXJlIG9ubHkgc3RvcmVkIGlmIHRoZXkgcGFzcyBhdXRoZW50aWNhdGlvbiB2aWEgPGVtPkNBUzwvZW0+LjwvcD4KPHA+QSB1c2VyIGNhbiB1c2UgPGVtPkNBUzwvZW0+IHRvIGF1dGhlbnRpY2F0ZSBhIGRvd25sb2FkZWQgcGFja2FnZSBvciBpdHMgY3J5cHRvZ3JhcGhpYyBoYXNoIChTSEEyNTYgZGlnZXN0KSB0byB2ZXJpZnkgaWYgaXQgaXMgbm90YXJpemVkIGFuZCB0cnVzdGVkLjwvcD4KPGgzIGlkPSJ3b3JraW5nLXdpdGgtc2JvbSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN3b3JraW5nLXdpdGgtc2JvbSI+IzwvYT4gV29ya2luZyB3aXRoIDxlbT5TQk9NPC9lbT48L2gzPgo8cD5UbyBhY2Nlc3MgdGhlIDxlbT5DQVM8L2VtPiBpbmZvcm1hdGlvbiBmb3IgQWxtYUxpbnV4IHlvdSBuZWVkIGFuIGludGVybmV0IGNvbm5lY3Rpb24gYXMgdGhlIDxlbT5DQVM8L2VtPiByZWNvcmRzIGFyZSBzdG9yZWQgaW4gdGhlIEFsbWFMaW51eCA8Y29kZT5naXQ8L2NvZGU+IHJlcG9zaXRvcnkuIFlvdSBhbHNvIG5lZWQgdG8gaW5zdGFsbCB0aGUgPGVtPkNBUzwvZW0+IHRvb2wgcGFja2FnZS48L3A+CjxwPkZpbmFsbHksIHRvIGJlIGFibGUgdG8gaW5zcGVjdCBhIGRlc2lyZWQgcGFja2FnZSBmb3IgPGVtPlNCT008L2VtPiBpbmZvcm1hdGlvbiwgeW91IG5lZWQgdGhlIHBhY2thZ2UgaXRzZWxmICg8Y29kZT4ucnBtPC9jb2RlPiBiaW5hcnkpLiBBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHVzZSB0aGUgcGFja2FnZSA8Y29kZT5idWlsZC1pZDwvY29kZT4gb3IgPGNvZGU+cnBtLXBhY2thZ2UtaGFzaDwvY29kZT4gZm91bmQgb24gdGhlIDxhIGhyZWY9Imh0dHBzOi8vYnVpbGQuYWxtYWxpbnV4Lm9yZy8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkFsbWFMaW51eCBidWlsZDxPdXRib3VuZExpbmsvPjwvYT4gcGFnZS48L3A+CjxoMyBpZD0ic3VwcG9ydGVkLXJlbGVhc2VzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N1cHBvcnRlZC1yZWxlYXNlcyI+IzwvYT4gU3VwcG9ydGVkIHJlbGVhc2VzPC9oMz4KPHVsPgo8bGk+QWxtYUxpbnV4IDguNzwvbGk+CjxsaT5BbG1hTGludXggOS4xPC9saT4KPC91bD4KPGhyPgo8cD7CoDwvcD4KPGgyIGlkPSJpbnN0YWxsLWd1aWRlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2luc3RhbGwtZ3VpZGUiPiM8L2E+IEluc3RhbGwgZ3VpZGU8L2gyPgo8aDMgaWQ9InNvZnR3YXJlLXByZXJlcXVpc2l0ZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc29mdHdhcmUtcHJlcmVxdWlzaXRlcyI+IzwvYT4gU29mdHdhcmUgUHJlcmVxdWlzaXRlczwvaDM+CjxwPlRvIGp1c3QgcXVlcnkgdGhlIDxlbT5TQk9NPC9lbT4gcmVjb3JkcyAodmVyc3VzIGNyZWF0aW5nIHRoZW0pIG9uZSBuZWVkcyBvbmx5IHRvIGluc3RhbGwgdGhlIGFib3ZlIG1lbnRpb25lZCA8Y29kZT5jYXM8L2NvZGU+IHRvb2wuIDxlbT5UaGUgQ0FTPC9lbT4gb3JnYW5pemF0aW9uIHByb3ZpZGVzIGl0IGluIGZvcm0gb2Ygc291cmNlIGFuZCBiaW5hcnkgcGFja2FnZShzKSB2aWEgdGhlaXIgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NvZGVub3RhcnkvY2FzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5naXRodWI8T3V0Ym91bmRMaW5rLz48L2E+IGFuZCBvZmZpY2lhbCB3ZWIgc2VydmljZTwvcD4KPHA+SW4gdGhlIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jb2Rlbm90YXJ5L2Nhcy9ibG9iL21hc3Rlci9SRUFETUUubWQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlJFQURNRS5tZDxPdXRib3VuZExpbmsvPjwvYT4geW91IGNhbiBmaW5kIGEgY3Jvc3MtcGxhdGZvcm0gaW5zdGFsbGF0aW9uIG1ldGhvZCwgcHJlc2VudGVkIGJlbG93LjwvcD4KPHA+wqA8L3A+CjxoMyBpZD0iaW5zdGFsbGF0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2luc3RhbGxhdGlvbiI+IzwvYT4gSW5zdGFsbGF0aW9uPC9oMz4KPGg0IGlkPSJvZmZpY2lhbC1jYXMtaW5zdGFsbGF0aW9uLW1ldGhvZC1saW51eMKuLW1hY29zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI29mZmljaWFsLWNhcy1pbnN0YWxsYXRpb24tbWV0aG9kLWxpbnV4wq4tbWFjb3MiPiM8L2E+IE9mZmljaWFsIDxlbT5DQVM8L2VtPiBpbnN0YWxsYXRpb24gbWV0aG9kICg8ZW0+TGludXjCrjwvZW0+LCA8ZW0+bWFjT1M8L2VtPik8L2g0Pgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+YmFzaCAmbHQ7KGN1cmwgaHR0cHM6Ly9nZXRjYXMuY29kZW5vdGFyeS5pbyAtTCkKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PHA+Rm9yIDxlbT5XaW5kb3dzPC9lbT4gY2hlY2sgYSBkZWRpY2F0ZWQgc2VjdGlvbiwgYmVsb3cuPC9wPgo8aDQgaWQ9ImV4YW1wbGUtb24tbWFjb3MiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZXhhbXBsZS1vbi1tYWNvcyI+IzwvYT4gRXhhbXBsZSBvbiA8ZW0+bWFjT1M8L2VtPjwvaDQ+CjxkaXYgY2xhc3M9ImN1c3RvbS1ibG9jayB0aXAiPjxwIGNsYXNzPSJjdXN0b20tYmxvY2stdGl0bGUiPlRJUDwvcD4KPHA+VGhlIG91dHB1dCBhcyBzaG93biBmb3IgPGVtPm1hY09TPC9lbT4gaXMgaWRlbnRpY2FsIG9uIDxhIGhyZWY9IiNvZmZpY2lhbC1jYXMtaW5zdGFsbGF0aW9uLW1ldGhvZC1saW51eCVDMiVBRS1tYWNvcyI+PGVtPkxpbnV4PC9lbT48L2E+LiBBbiBhbHRlcm5hdGl2ZSBpbnN0YWxsIG1ldGhvZCBmb3IgPGVtPkxpbnV4PC9lbT4gaXMgZGVzY3JpYmVkIGJlbG93LjwvcD4KPHA+PHN0cm9uZz5XYXJuaW5nOjwvc3Ryb25nPiB0aGUgZGlyZWN0b3J5IHlvdSB3aXNoIHRvIGluc3RhbGwgdG8gbmVlZHMgdG8gZXhpc3QgYmVmb3JlIHJ1bm5pbmcgaW5zdGFsbCBjb21tYW5kLiBUaGlzIGlzIHJlbGV2YW50IGlmIHlvdSdyZSBub3QgaW5zdGFsbGluZyB0byBhIHN5c3RlbSBkaXJlY3RvcnkgbGlrZSA8Y29kZT4vdXNyL2xvY2FsL2JpbjwvY29kZT4gYnV0IHRvIGEgY3VzdG9tIHBhdGgsIGxpa2UgaW4gdGhlIGV4YW1wbGUuPC9wPgo8L2Rpdj4KPGg1IGlkPSJpbnN0YWxsIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2luc3RhbGwiPiM8L2E+IEluc3RhbGw6PC9oNT4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPuKenCAgL3RtcCBta2RpciAuL2Nhcy10ZXN0CuKenCAgL3RtcCBiYXNoICZsdDsoY3VybCBodHRwczovL2dldGNhcy5jb2Rlbm90YXJ5LmlvIC1MKQogICUgVG90YWwgICAgJSBSZWNlaXZlZCAlIFhmZXJkICBBdmVyYWdlIFNwZWVkICAgVGltZSAgICBUaW1lICAgICBUaW1lICBDdXJyZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERsb2FkICBVcGxvYWQgICBUb3RhbCAgIFNwZW50ICAgIExlZnQgIFNwZWVkCjEwMCAgMjQ0OSAgMTAwICAyNDQ5ICAgIDAgICAgIDAgIDE3NTY2ICAgICAgMCAtLTotLTotLSAtLTotLTotLSAtLTotLTotLSAxODgzOApMYXRlc3QgYXZhaWxhYmxlIHJlbGVhc2UgZm9yIGNhcyBpczogdjEuMC4zCkRvd25sb2FkaW5nIGNhcy4uLgpJbnN0YWxsIGxvY2F0aW9uIFtkZWZhdWx0OiAvdXNyL2xvY2FsL2Jpbl06IC90bXAvY2FzLXRlc3QKY2FzIHZlcnNpb24gdjEuMC4zIGhhcyBiZWVuIGluc3RhbGxlZCB0bzoKIOKAoiAvdG1wL2Nhcy10ZXN0L2NhcwoK8J+OiURvbmUgCgpZb3UgY2FuIG5vdyB1c2UgdGhlIGNvbW11bml0eSBhdHRlc3RhdGlvbiBzZXJ2aWNlIChodHRwczovL2Nhcy5jb2Rlbm90YXJ5LmNvbSkgYnkgcnVubmluZzogJCBjYXMKClRvIGdldCBzdGFydGVkIHNldCB5b3VyIEFQSSBrZXkgeW91IHJlY2VpdmVkIGJ5IGVtYWlsIGFuZCBsb2dpbjogJCBleHBvcnQgQ0FTX0FQSV9LRVk9Jmx0O3lvdXIgQVBJX0tFWSZndDs7IGNhcyBsb2dpbgoKWW91IGNhbiBmaW5kIHRoZSBvbmxpbmUgZG9jdW1lbnRhdGlvbiBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vY29kZW5vdGFyeS9jYXMKCuKenCAgL3RtcAo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48aDUgaWQ9InRlc3QtcnVuIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Rlc3QtcnVuIj4jPC9hPiBUZXN0IHJ1bjo8L2g1Pgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+4p6cICAvdG1wIC4vY2FzLXRlc3QvY2FzClVzYWdlOgogIGNhcyBbY29tbWFuZF0KCkF2YWlsYWJsZSBDb21tYW5kczoKICBhdXRoZW50aWNhdGUgQXV0aGVudGljYXRlIGFzc2V0cyBhZ2FpbnN0IENBUwogIGJvbSAgICAgICAgICBDb2xsZWN0IEJPTSBpbmZvcm1hdGlvbgogIGNvbXBsZXRpb24gICBHZW5lcmF0ZSB0aGUgYXV0b2NvbXBsZXRpb24gc2NyaXB0IGZvciB0aGUgc3BlY2lmaWVkIHNoZWxsCiAgaGVscCAgICAgICAgIEhlbHAgYWJvdXQgYW55IGNvbW1hbmQKICBpbnNwZWN0ICAgICAgUmV0dXJucyB0aGUgYXNzZXQgaGlzdG9yeSB3aXRoIGxvdy1sZXZlbCBpbmZvcm1hdGlvbgogIGxpc3QgICAgICAgICBSZXR1cm5zIHRoZSBoaXN0b3J5IG9mIG9wZXJhdGlvbnMgbWFkZSB3aXRoIEFQSSBrZXkKICBsb2dpbiAgICAgICAgTG9nIGluIHRvIENvbW11bml0eSBBdHRlc3RhdGlvbiBTZXJ2aWNlCiAgbG9nb3V0ICAgICAgIExvZ291dCB0aGUgY3VycmVudCB1c2VyCiAgbm90YXJpemUgICAgIE5vdGFyaXplIGFuIGFzc2V0IG9udG8gQ29tbXVuaXR5IEF0dGVzdGF0aW9uIFNlcnZpY2UKICB1bnN1cHBvcnQgICAgVW5zdXBwb3J0IGFuIGFzc2V0CiAgdW50cnVzdCAgICAgIFVudHJ1c3QgYW4gYXNzZXQKCkZsYWdzOgogICAgICAtLWNhc3BhdGggc3RyaW5nICAgY29uZmlnIGZpbGVzIChkZWZhdWx0IGlzIHVzZXIgaG9tZSBkaXJlY3RvcnkpCiAgLWgsIC0taGVscCAgICAgICAgICAgICBoZWxwIGZvciBjYXMKICAtbywgLS1vdXRwdXQgc3RyaW5nICAgIG91dHB1dCBmb3JtYXQsIG9uZSBvZjogLS1vdXRwdXQ9anNvbnwtLW91dHB1dD0mIzM5OyYjMzk7CiAgLVMsIC0tc2lsZW50ICAgICAgICAgICBzaWxlbnQgbW9kZSwgZG9uJiMzOTt0IHNob3cgcHJvZ3Jlc3Mgc3Bpbm5lciwgYnV0IGl0IHdpbGwgc3RpbGwgb3V0cHV0IHRoZSByZXN1bHQKICAgICAgLS12ZXJib3NlICAgICAgICAgIGlmIHRydWUsIHByaW50IGFkZGl0aW9uYWwgaW5mb3JtYXRpb24KICAtdiwgLS12ZXJzaW9uICAgICAgICAgIHZlcnNpb24gZm9yIGNhcwoKVXNlICZxdW90O2NhcyBbY29tbWFuZF0gLS1oZWxwJnF1b3Q7IGZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IGEgY29tbWFuZC4KCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoNCBpZD0iZXhhbXBsZS1vbi13aW5kb3dzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2V4YW1wbGUtb24td2luZG93cyI+IzwvYT4gRXhhbXBsZSBvbiA8ZW0+V2luZG93czwvZW0+PC9oND4KPGg1IGlkPSJpbnN0YWxsLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaW5zdGFsbC0yIj4jPC9hPiBJbnN0YWxsOjwvaDU+CjxwPkZvciA8ZW0+V2luZG93czwvZW0+IHVzZXJzLCBkb3dubG9hZCB5b3VyIDxjb2RlPmNhczwvY29kZT4gdG9vbCBiaW5hcnkgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NvZGVub3RhcnkvY2FzL3JlbGVhc2VzL2xhdGVzdCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+aGVyZTxPdXRib3VuZExpbmsvPjwvYT4uPC9wPgo8aDUgaWQ9InRlc3QtcnVuLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdGVzdC1ydW4tMiI+IzwvYT4gVGVzdCBydW46PC9oNT4KPHA+UnVuIHRoZSA8Y29kZT4uZXhlPC9jb2RlPiBmaWxlIGZyb20gdGhlIGNvbW1hbmQgbGluZTo8L3A+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLSBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS10ZXh0Ij48Y29kZT5DOlxVc2Vyc1xhdXNlciZndDtjYXMtdjEuMC4zLXdpbmRvd3MtYW1kNjQuZXhlIGhlbHAKVXNhZ2U6CiAgY2FzIFtjb21tYW5kXQoKQXZhaWxhYmxlIENvbW1hbmRzOgogIGF1dGhlbnRpY2F0ZSBBdXRoZW50aWNhdGUgYXNzZXRzIGFnYWluc3QgQ0FTCiAgYm9tICAgICAgICAgIENvbGxlY3QgQk9NIGluZm9ybWF0aW9uCiAgY29tcGxldGlvbiAgIEdlbmVyYXRlIHRoZSBhdXRvY29tcGxldGlvbiBzY3JpcHQgZm9yIHRoZSBzcGVjaWZpZWQgc2hlbGwKICBoZWxwICAgICAgICAgSGVscCBhYm91dCBhbnkgY29tbWFuZAogIGluc3BlY3QgICAgICBSZXR1cm5zIHRoZSBhc3NldCBoaXN0b3J5IHdpdGggbG93LWxldmVsIGluZm9ybWF0aW9uCiAgbGlzdCAgICAgICAgIFJldHVybnMgdGhlIGhpc3Rvcnkgb2Ygb3BlcmF0aW9ucyBtYWRlIHdpdGggQVBJIGtleQogIGxvZ2luICAgICAgICBMb2cgaW4gdG8gQ29tbXVuaXR5IEF0dGVzdGF0aW9uIFNlcnZpY2UKICBsb2dvdXQgICAgICAgTG9nb3V0IHRoZSBjdXJyZW50IHVzZXIKICBub3Rhcml6ZSAgICAgTm90YXJpemUgYW4gYXNzZXQgb250byBDb21tdW5pdHkgQXR0ZXN0YXRpb24gU2VydmljZQogIHVuc3VwcG9ydCAgICBVbnN1cHBvcnQgYW4gYXNzZXQKICB1bnRydXN0ICAgICAgVW50cnVzdCBhbiBhc3NldAoKRmxhZ3M6CiAgICAgIC0tY2FzcGF0aCBzdHJpbmcgICBjb25maWcgZmlsZXMgKGRlZmF1bHQgaXMgdXNlciBob21lIGRpcmVjdG9yeSkKICAtaCwgLS1oZWxwICAgICAgICAgICAgIGhlbHAgZm9yIGNhcwogIC1vLCAtLW91dHB1dCBzdHJpbmcgICAgb3V0cHV0IGZvcm1hdCwgb25lIG9mOiAtLW91dHB1dD1qc29ufC0tb3V0cHV0PSYjMzk7JiMzOTsKICAtUywgLS1zaWxlbnQgICAgICAgICAgIHNpbGVudCBtb2RlLCBkb24mIzM5O3Qgc2hvdyBwcm9ncmVzcyBzcGlubmVyLCBidXQgaXQgd2lsbCBzdGlsbCBvdXRwdXQgdGhlIHJlc3VsdAogICAgICAtLXZlcmJvc2UgICAgICAgICAgaWYgdHJ1ZSwgcHJpbnQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbgogIC12LCAtLXZlcnNpb24gICAgICAgICAgdmVyc2lvbiBmb3IgY2FzCgpVc2UgJnF1b3Q7Y2FzIFtjb21tYW5kXSAtLWhlbHAmcXVvdDsgZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgYSBjb21tYW5kLgo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48aDQgaWQ9ImFsdGVybmF0aXZlLWluc3RhbGxhdGlvbi1tZXRob2QtZm9yLWFsbWFsaW51eC1zeXN0ZW1zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FsdGVybmF0aXZlLWluc3RhbGxhdGlvbi1tZXRob2QtZm9yLWFsbWFsaW51eC1zeXN0ZW1zIj4jPC9hPiBBbHRlcm5hdGl2ZSBpbnN0YWxsYXRpb24gbWV0aG9kIGZvciBBbG1hTGludXggc3lzdGVtczwvaDQ+CjxwPkFuIGFsdGVybmF0aXZlIHRvIDxlbT5PZmZpY2lhbCBDQVMgaW5zdGFsbGF0aW9uIG1ldGhvZDwvZW0+IGlzIHRvIGluc3RhbGwgdGhlIDxlbT5DQVM8L2VtPiB0b29sIHBhY2thZ2UgZnJvbSB0aGUgQWxtYUxpbnV4IHJlcG9zaXRvcnkuIFRoaXMgd2lsbCAob2J2aW91c2x5KSB3b3JrIGV4Y2x1c2l2ZWx5IG9uIHRoZSBBbG1hTGludXggc3lzdGVtLjwvcD4KPGRpdiBjbGFzcz0iY3VzdG9tLWJsb2NrIHRpcCI+PHAgY2xhc3M9ImN1c3RvbS1ibG9jay10aXRsZSI+VElQPC9wPgo8cD5UaGUgPGVtPkNBUzwvZW0+IHBhY2thZ2UgaXMgYXZhaWxhYmxlIGluIEFsbWFMaW51eCBBcmNoaXRlY3QncyBDT1BSIChDb21tdW5pdHkgT3duZWQgUGFja2FnZSBSZXBvc2l0b3J5KS4gIEhlcmUsIHdlIGluc3RhbGwgaXQgb24gc3lzdGVtIGJhc2VkIG9uIDxhIGhyZWY9Imh0dHBzOi8vd2lraS5hbG1hbGludXgub3JnL3JlbGVhc2Utbm90ZXMvOS4xLmh0bWwiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkFsbWFMaW51eCA5LjE8T3V0Ym91bmRMaW5rLz48L2E+IHJlbGVhc2UuPC9wPgo8L2Rpdj4KPGg1IGlkPSJfMS1lbmFibGUtdGhlLWNvcHItcmVwby1mb3ItY29kZW5vdGFyeS1wYWNrYWdlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLWVuYWJsZS10aGUtY29wci1yZXBvLWZvci1jb2Rlbm90YXJ5LXBhY2thZ2UiPiM8L2E+IDEuIEVuYWJsZSB0aGUgQ09QUiByZXBvIGZvciBjb2Rlbm90YXJ5IHBhY2thZ2U8L2g1Pgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+JCBzdWRvIGRuZiBjb3ByIC0taHViIGJ1aWxkLmFsbWFsaW51eC5vcmcgZW5hYmxlIGFuZHJld2x1a29zaGtvL2NvZGVub3RhcnkKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGg1IGlkPSJleHBlY3RlZC1vdXRwdXQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZXhwZWN0ZWQtb3V0cHV0Ij4jPC9hPiBFeHBlY3RlZCBvdXRwdXQ6PC9oNT4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPlthbG1hbGludXhfdXNlckBkZW1vaG9zdCB+XSQgc3VkbyBkbmYgY29wciAtLWh1YiBidWlsZC5hbG1hbGludXgub3JnIGVuYWJsZSBhbmRyZXdsdWtvc2hrby9jb2Rlbm90YXJ5CkVuYWJsaW5nIGEgQ29wciByZXBvc2l0b3J5LiBQbGVhc2Ugbm90ZSB0aGF0IHRoaXMgcmVwb3NpdG9yeSBpcyBub3QgcGFydApvZiB0aGUgbWFpbiBkaXN0cmlidXRpb24sIGFuZCBxdWFsaXR5IG1heSB2YXJ5LgoKVGhlIEZlZG9yYSBQcm9qZWN0IGRvZXMgbm90IGV4ZXJjaXNlIGFueSBwb3dlciBvdmVyIHRoZSBjb250ZW50cyBvZgp0aGlzIHJlcG9zaXRvcnkgYmV5b25kIHRoZSBydWxlcyBvdXRsaW5lZCBpbiB0aGUgQ29wciBGQVEgYXQKJmx0O2h0dHBzOi8vZG9jcy5wYWd1cmUub3JnL2NvcHIuY29wci91c2VyX2RvY3VtZW50YXRpb24uaHRtbCN3aGF0LWktY2FuLWJ1aWxkLWluLWNvcHImZ3Q7LAphbmQgcGFja2FnZXMgYXJlIG5vdCBoZWxkIHRvIGFueSBxdWFsaXR5IG9yIHNlY3VyaXR5IGxldmVsLgoKUGxlYXNlIGRvIG5vdCBmaWxlIGJ1ZyByZXBvcnRzIGFib3V0IHRoZXNlIHBhY2thZ2VzIGluIEZlZG9yYQpCdWd6aWxsYS4gSW4gY2FzZSBvZiBwcm9ibGVtcywgY29udGFjdCB0aGUgb3duZXIgb2YgdGhpcyByZXBvc2l0b3J5LgoKRG8geW91IHJlYWxseSB3YW50IHRvIGVuYWJsZSBidWlsZC5hbG1hbGludXgub3JnL2FuZHJld2x1a29zaGtvL2NvZGVub3Rhcnk/IFt5L05dOiB5ClJlcG9zaXRvcnkgc3VjY2Vzc2Z1bGx5IGVuYWJsZWQuClthbG1hbGludXhfdXNlckBkZW1vaG9zdCB+XSQgCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoNSBpZD0iXzItcGVyZm9ybS10aGUtYWN0dWFsLWluc3RhbGxhdGlvbi1zdGVwIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18yLXBlcmZvcm0tdGhlLWFjdHVhbC1pbnN0YWxsYXRpb24tc3RlcCI+IzwvYT4gMi4gUGVyZm9ybSB0aGUgYWN0dWFsIGluc3RhbGxhdGlvbiBzdGVwOjwvaDU+CjwhLS1iZWZvcmViZWdpbi0tPjxkaXYgY2xhc3M9Imxhbmd1YWdlLSBleHRyYS1jbGFzcyI+PCEtLWFmdGVyYmVnaW4tLT48cHJlIHYtcHJlIGNsYXNzPSJsYW5ndWFnZS10ZXh0Ij48Y29kZT4kIHN1ZG8gZG5mIGluc3RhbGwgY2FzCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoNSBpZD0iZXhwZWN0ZWQtb3V0cHV0LTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZXhwZWN0ZWQtb3V0cHV0LTIiPiM8L2E+IEV4cGVjdGVkIG91dHB1dDo8L2g1Pgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+W2FsbWFsaW51eF91c2VyQGRlbW9ob3N0IH5dJCBzdWRvIGRuZiBpbnN0YWxsIGNhcwpDb3ByIHJlcG8gZm9yIGNvZGVub3RhcnkgeDg2XzY0IG93bmVkIGJ5IGFuZHJld2x1a29zaGtvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgODkxICBCL3MgfCAxLjIga0IgICAgIDAwOjAxICAgIAoKRGVwZW5kZW5jaWVzIHJlc29sdmVkLgo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIFBhY2thZ2UgICAgICAgIEFyY2hpdGVjdHVyZSAgICAgIFZlcnNpb24gICAgICAgICAgICAgICAgIFJlcG9zaXRvcnkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNpemUKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ckluc3RhbGxpbmc6CiBjYXMgICAgICAgICAgICB4ODZfNjQgICAgICAgICAgICAxLjAuMy0xLmVsOSAgICAgICAgICAgICBjb3ByOmJ1aWxkLmFsbWFsaW51eC5vcmc6YW5kcmV3bHVrb3Noa286Y29kZW5vdGFyeSAgICAgICAgICAgIDUuNCBNCgpUcmFuc2FjdGlvbiBTdW1tYXJ5Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpJbnN0YWxsICAxIFBhY2thZ2UKClRvdGFsIGRvd25sb2FkIHNpemU6IDUuNCBNCkluc3RhbGxlZCBzaXplOiAxOSBNCklzIHRoaXMgb2sgW3kvTl06IHkKRG93bmxvYWRpbmcgUGFja2FnZXM6CmNhcy0xLjAuMy0xLmVsOS54ODZfNjQucnBtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0OTMga0IvcyB8IDUuNCBNQiAgICAgMDA6MTEgICAgCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpUb3RhbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNDkzIGtCL3MgfCA1LjQgTUIgICAgIDAwOjExICAgICAKUnVubmluZyB0cmFuc2FjdGlvbiBjaGVjawpUcmFuc2FjdGlvbiBjaGVjayBzdWNjZWVkZWQuClJ1bm5pbmcgdHJhbnNhY3Rpb24gdGVzdApUcmFuc2FjdGlvbiB0ZXN0IHN1Y2NlZWRlZC4KUnVubmluZyB0cmFuc2FjdGlvbgogIFByZXBhcmluZyAgICAgICAgOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEvMSAKICBJbnN0YWxsaW5nICAgICAgIDogY2FzLTEuMC4zLTEuZWw5Lng4Nl82NCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLzEgCiAgUnVubmluZyBzY3JpcHRsZXQ6IGNhcy0xLjAuMy0xLmVsOS54ODZfNjQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMS8xIAogIFZlcmlmeWluZyAgICAgICAgOiBjYXMtMS4wLjMtMS5lbDkueDg2XzY0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEvMSAKCkluc3RhbGxlZDoKICBjYXMtMS4wLjMtMS5lbDkueDg2XzY0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgpDb21wbGV0ZSEKW2FsbWFsaW51eF91c2VyQGRlbW9ob3N0IH5dJAo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48cD48c3Ryb25nPlBSRVAgRE9ORTo8L3N0cm9uZz4gQXQgdGhpcyBwb2ludCB5b3VyIHN5c3RlbSBpcyByZWFkeSB0byB3b3JrIHdpdGggQWxtYUxpbnV4IDxlbT5TQk9NPC9lbT4gaW5mcmFzdHJ1Y3R1cmUhPC9wPgo8aHI+CjxwPsKgPC9wPgo8aDIgaWQ9InVzaW5nLWd1aWRlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3VzaW5nLWd1aWRlIj4jPC9hPiBVc2luZyBHdWlkZTwvaDI+CjxwPjxzdHJvbmc+QXV0aGVudGljYXRlIDxlbT5TQk9NPC9lbT4gb24gcGFja2FnZXMgLSBkZWZpbml0aW9uOjwvc3Ryb25nPjwvcD4KPGJsb2NrcXVvdGU+CjxwPjxzdHJvbmc+QXV0aGVudGljYXRpb248L3N0cm9uZz4gLSBtYXRjaGVzIHRoZSBoYXNoIG9mIGEgbG9jYWwgYXNzZXQgdG8gYSBoYXNoIG9uIDxlbT5DQVM8L2VtPi4gSW4gY2FzZSBvZiBBbG1hTGludXggdGhlIGxvY2FsIGFzc2V0IGlzIGFuIDxlbT5SUE08L2VtPiBiaW5hcnkgcGFja2FnZS48L3A+CjwvYmxvY2txdW90ZT4KPHA+VGhlcmUgYXJlIGEgZmV3IHdheXMgdG8gYXV0aGVudGljYXRlIHRoZSBwYWNrYWdlOjwvcD4KPHVsPgo8bGk+QXV0aGVudGljYXRlIGJ5IHBhY2thZ2UgYmluYXJ5IGZpbGU8L2xpPgo8bGk+QXV0aGVudGljYXRlIHdpdGggbWFudWFsbHkgY2FsY3VsYXRlZCA8Y29kZT5ycG0tcGFja2FnZS1oYXNoPC9jb2RlPjwvbGk+CjxsaT5BdXRoZW50aWNhdGUgd2l0aCA8Y29kZT5ycG0tcGFja2FnZS1oYXNoPC9jb2RlPiBmcm9tIEFsbWFMaW51eCBCdWlsZCBTeXN0ZW08L2xpPgo8L3VsPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5USVA8L3A+CjxwPk5vdGU6IFRoZSA8Y29kZT5jYXM8L2NvZGU+IHByb2dyYW0gaXMgYSBjb21tYW5kIGxpbmUgdG9vbCB3aXRoIGEgdW5pZmllZCBpbnRlcmZhY2UgYWNyb3NzIGFsbCB0aHJlZSBwbGF0Zm9ybXMgKDxlbT5MaW51eMKuLCBtYWNPUywgV2luZG93czwvZW0+KTsgVGhlcmVmb3JlLCB0aGUgY29tbWFuZHMgc2hvd24gaW4gdGhlIHNlY3Rpb24gYmVsb3cgY2FuIGJlIHVzZWQgb24gYWxsIHN1cHBvcnRlZCBwbGF0Zm9ybXMuPC9wPgo8L2Rpdj4KPHA+wqA8L3A+CjxoMyBpZD0iYXV0aGVudGljYXRlLWJ5LXBhY2thZ2UtYmluYXJ5LWZpbGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYXV0aGVudGljYXRlLWJ5LXBhY2thZ2UtYmluYXJ5LWZpbGUiPiM8L2E+IEF1dGhlbnRpY2F0ZSBieSBwYWNrYWdlIGJpbmFyeSBmaWxlPC9oMz4KPGg0IGlkPSJnZXQtdGhlLXBhY2thZ2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZ2V0LXRoZS1wYWNrYWdlIj4jPC9hPiBHZXQgdGhlIHBhY2thZ2U8L2g0Pgo8cD5UbyBleGFtaW5lIGEgcGFja2FnZSBmcm9tIHRoZSByZXBvIHlvdSBzaG91bGQgZmlyc3QgZ2V0IHRoZSBVUkwuPC9wPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5USVA8L3A+CjxwPlRoZSBwYWNrYWdlIHdlIHNlbGVjdGVkIGZvciB0aGlzIGRlbW8gd2FzOiA8Y29kZT5rZXJuZWwtNS4xNC4wLTE2Mi4xMi4xLmVsOV8xLng4Nl82NC5ycG08L2NvZGU+PC9wPgo8cD5VUkw6PC9wPgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+aHR0cDovL3JlcG8uYWxtYWxpbnV4Lm9yZy9hbG1hbGludXgvOS4xL0Jhc2VPUy94ODZfNjQvb3MvUGFja2FnZXMva2VybmVsLTUuMTQuMC0xNjIuMTIuMS5lbDlfMS54ODZfNjQucnBtCjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjwvZGl2Pgo8aDUgaWQ9InVzZS1jdXJsLXRvLWdldC10aGUtcGFja2FnZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN1c2UtY3VybC10by1nZXQtdGhlLXBhY2thZ2UiPiM8L2E+IFVzZSA8Y29kZT5jdXJsPC9jb2RlPiB0byBnZXQgdGhlIHBhY2thZ2U6PC9oNT4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPmN1cmwgaHR0cDovL3JlcG8uYWxtYWxpbnV4Lm9yZy9hbG1hbGludXgvOS4xL0Jhc2VPUy94ODZfNjQvb3MvUGFja2FnZXMva2VybmVsLTUuMTQuMC0xNjIuMTIuMS5lbDlfMS54ODZfNjQucnBtIC1vIGtlcm5lbC01LjE0LjAtMTYyLjEyLjEuZWw5XzEueDg2XzY0LnJwbQo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48aDQgaWQ9ImF1dGhlbnRpY2F0aW9uLXVzaW5nLXRoZS1jYXMtdG9vbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhdXRoZW50aWNhdGlvbi11c2luZy10aGUtY2FzLXRvb2wiPiM8L2E+IEF1dGhlbnRpY2F0aW9uIHVzaW5nIHRoZSA8ZW0+Q0FTPC9lbT4gdG9vbDwvaDQ+CjxwPlVzZSB0aGUgZG93bmxvYWRlZCBwYWNrYWdlIGZpbGUgKHBhdGgpIGFzIGEgcGFyYW1ldGVyIGZvciB0aGUgPGNvZGU+Y2FzPC9jb2RlPiBjb21tYW5kOjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPmNhcyBhdXRoZW50aWNhdGUgLS1zaWduZXJJRD1jbG91ZC1pbmZyYUBhbG1hbGludXgub3JnIGtlcm5lbC01LjE0LjAtMTYyLjEyLjEuZWw5XzEueDg2XzY0LnJwbQo8L2NvZGU+PC9wcmU+CjwhLS1iZWZvcmVlbmQtLT48L2Rpdj48IS0tYWZ0ZXJlbmQtLT48aDUgaWQ9ImxpdmUtZXhhbXBsZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNsaXZlLWV4YW1wbGUiPiM8L2E+IExpdmUgZXhhbXBsZTwvaDU+CjxwPjxpbWcgc3JjPSIvaW1hZ2VzL3Nib20tZ3VpZGUtbGl2ZS1leGFtcGxlLWF1dGgtYnktYmluYXJ5LWZpbGUuZ2lmIiBhbHQ9ImltYWdlIj48L3A+CjxwPjxzdHJvbmc+Q09OR1JBVFVMQVRJT05TITwvc3Ryb25nPiBZb3UgaGF2ZSBqdXN0IDxzdHJvbmc+YXV0aGVudGljYXRlZDwvc3Ryb25nPiBhIHBhY2thZ2Ugd2l0aCB0aGUgPGNvZGU+Y2FzPC9jb2RlPiBDTEkgdG9vbCE8L3A+CjxwPsKgPC9wPgo8aDMgaWQ9ImF1dGhlbnRpY2F0ZS13aXRoLW1hbnVhbGx5LWNhbGN1bGF0ZWQtcnBtLXBhY2thZ2UtaGFzaCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhdXRoZW50aWNhdGUtd2l0aC1tYW51YWxseS1jYWxjdWxhdGVkLXJwbS1wYWNrYWdlLWhhc2giPiM8L2E+IEF1dGhlbnRpY2F0ZSB3aXRoIG1hbnVhbGx5IGNhbGN1bGF0ZWQgPGNvZGU+cnBtLXBhY2thZ2UtaGFzaDwvY29kZT48L2gzPgo8cD5Zb3UgY2FuIGFsc28gY2FsY3VsYXRlIHBhY2thZ2UgaGFzaCBtYW51YWxseSBmcm9tIENMSS48L3A+CjxwPkFzc3VtaW5nIGhlcmUsIHlvdSBoYXZlIHRoZSBwYWNrYWdlIGFscmVhZHkuIElmIG5vdCBwbGVhc2UgcmVmZXIgdG8gJnF1b3Q7R2V0IHRoZSBwYWNrYWdlJnF1b3Q7IGFib3ZlLjwvcD4KPHA+VG8gZ2V0IHRoZSA8Y29kZT5ycG0tcGFja2FnZS1oYXNoPC9jb2RlPiB5b3UganVzdCBuZWVkIHRvIGNhbGN1bGF0ZSA8Y29kZT5zaGEyNTZzdW08L2NvZGU+OjwvcD4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPlBLR19GSUxFPWtlcm5lbC01LjE0LjAtMTYyLjEyLjEuZWw5XzEueDg2XzY0LnJwbQpTVU09JChzaGEyNTZzdW0gJFBLR19GSUxFKQpIQVNIPSR7U1VNJSVcICpycG19CjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoNCBpZD0iYXV0aGVudGljYXRpb24tdXNpbmctdGhlLWNhcy10b29sLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYXV0aGVudGljYXRpb24tdXNpbmctdGhlLWNhcy10b29sLTIiPiM8L2E+IEF1dGhlbnRpY2F0aW9uIHVzaW5nIHRoZSA8ZW0+Q0FTPC9lbT4gdG9vbDwvaDQ+CjxwPlVzZSB0aGUgY2FsY3VsYXRlZCBoYXNoIGFzIHZhbHVlIGZvciBwYXJhbWV0ZXIgPGNvZGU+LS1oYXNoPC9jb2RlPiBpbiB0aGUgPGNvZGU+Y2FzPC9jb2RlPiB0b29sIGludm9jYXRpb246PC9wPgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+Y2FzIGF1dGhlbnRpY2F0ZSAtLXNpZ25lcklEPWNsb3VkLWluZnJhQGFsbWFsaW51eC5vcmcgLS1oYXNoICRIQVNICjwvY29kZT48L3ByZT4KPCEtLWJlZm9yZWVuZC0tPjwvZGl2PjwhLS1hZnRlcmVuZC0tPjxoNSBpZD0ibGl2ZS1leGFtcGxlLTIiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbGl2ZS1leGFtcGxlLTIiPiM8L2E+IExpdmUgZXhhbXBsZTwvaDU+CjxwPlRoZSB3aG9sZSBwcm9jZXNzIGFzIGRlc2NyaWJlZCBhYm92ZSBzaG91bGQgbG9vayBsaWtlOjwvcD4KPHA+PGltZyBzcmM9Ii9pbWFnZXMvc2JvbS1ndWlkZS1saXZlLWV4YW1wbGUtYXV0aC1ycG0taGFzaC5naWYiIGFsdD0iaW1hZ2UiPjwvcD4KPHA+PHN0cm9uZz5DT05HUkFUVUxBVElPTlMhPC9zdHJvbmc+IFlvdSBoYXZlIGp1c3QgPHN0cm9uZz5hdXRoZW50aWNhdGVkPC9zdHJvbmc+IGEgcGFja2FnZSB3aXRoIHRoZSA8Y29kZT5jYXM8L2NvZGU+IENMSSB0b29sITwvcD4KPHA+wqA8L3A+CjxoMyBpZD0iZ2V0LXJwbS1wYWNrYWdlLWhhc2gtb3ItcGFja2FnZS1mcm9tLWFsbWFsaW51eC1idWlsZC1zeXN0ZW0iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZ2V0LXJwbS1wYWNrYWdlLWhhc2gtb3ItcGFja2FnZS1mcm9tLWFsbWFsaW51eC1idWlsZC1zeXN0ZW0iPiM8L2E+IEdldCA8Y29kZT5ycG0tcGFja2FnZS1oYXNoPC9jb2RlPiAob3IgcGFja2FnZSkgZnJvbSBBbG1hTGludXggQnVpbGQgU3lzdGVtPC9oMz4KPHA+QWx0ZXJuYXRpdmVseSwgeW91IGNhbiBnZXQgPGNvZGU+cnBtLXBhY2thZ2UtaGFzPC9jb2RlPiAoYW5kIHBhY2thZ2UgYmluYXJ5LCBvZiBjb3Vyc2UpIGZyb20gdGhlIGJ1aWxkIHNpdGUuPC9wPgo8aDQgaWQ9Il8xLW5hdmlnYXRlLXlvdXItYnJvd3Nlci1odHRwcy1idWlsZC1hbG1hbGludXgtb3JnIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLW5hdmlnYXRlLXlvdXItYnJvd3Nlci1odHRwcy1idWlsZC1hbG1hbGludXgtb3JnIj4jPC9hPiAxLiBOYXZpZ2F0ZSB5b3VyIGJyb3dzZXIgaHR0cHM6Ly9idWlsZC5hbG1hbGludXgub3JnLzwvaDQ+CjxoNCBpZD0iXzItc2VhcmNoLWZvci1hLWRlc2lyZWQtcGFja2FnZS1idWlsZC1ieS1uYW1lLWluLXRoZS1leGFtcGxlLXdlLWxvb2stZm9yLWtlcm5lbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMi1zZWFyY2gtZm9yLWEtZGVzaXJlZC1wYWNrYWdlLWJ1aWxkLWJ5LW5hbWUtaW4tdGhlLWV4YW1wbGUtd2UtbG9vay1mb3Ita2VybmVsIj4jPC9hPiAyLiBTZWFyY2ggZm9yIGEgZGVzaXJlZCBwYWNrYWdlIChidWlsZCkgYnkgbmFtZSwgaW4gdGhlIGV4YW1wbGUgd2UgbG9vayBmb3IgPGNvZGU+a2VybmVsPC9jb2RlPjo8L2g0Pgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5USVA8L3A+CjxwPlRvIG9wZW4gdGhlIHNlYXJjaCB0YWIgY2xpY2sgb24gdGhlIG1hZ25pZnlpbmcgZ2xhc3MgaWNvbiBpbiB0aGUgcmlnaHQgdG9wIGNvcm5lci48L3A+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5USVA8L3A+CjxwPk5hdHVyYWxseSwgeW91IGNhbiBuYXJyb3cgdGhlIHNlYXJjaCBieSBzdXBwbHlpbmcgbW9yZSBwYXJhbWV0ZXJzIHRvIHRoZSBmaWx0ZXIuPC9wPgo8L2Rpdj4KPHA+PGltZyBzcmM9Ii9pbWFnZXMvc2JvbS1ndWlkZS1icy1zZWFyY2gucG5nIiBhbHQ9ImltYWdlIj48L3A+CjxkaXYgY2xhc3M9ImN1c3RvbS1ibG9jayB0aXAiPjxwIGNsYXNzPSJjdXN0b20tYmxvY2stdGl0bGUiPlRJUDwvcD4KPHA+TW9yZSBpbmZvIGFib3V0IHdvcmtpbmcgd2l0aCB0aGUgYnVpbGQtc3lzdGVtIHBhZ2U6CjxhIGhyZWY9Imh0dHBzOi8vaHR0cHM6Ly9naXRodWIuY29tL0FsbWFMaW51eC9idWlsZC1zeXN0ZW0vd2lraS9BbG1hTGludXgtQnVpbGQtU3lzdGVtLVVzZXItR3VpZGUjdGhlLWJ1aWxkLWZlZWQtc2NyZWVuIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5BbG1hTGludXggQnVpbGQgU3lzdGVtIFVzZXIgR3VpZGUgfCB0aGUgYnVpbGQgZmVlZHNjcmVlbjxPdXRib3VuZExpbmsvPjwvYT48L3A+CjwvZGl2Pgo8aDQgaWQ9Il8zLWNsaWNrLXRoZS1pLWRldGFpbHMtb24tdGhlLXNlbGVjdGVkLWVudHJ5LWhlcmUtdG9wLW9uZS15b3Utd2lsbC1nZXQtdGhlLWJ1aWxkLXN1bW1hcnkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzMtY2xpY2stdGhlLWktZGV0YWlscy1vbi10aGUtc2VsZWN0ZWQtZW50cnktaGVyZS10b3Atb25lLXlvdS13aWxsLWdldC10aGUtYnVpbGQtc3VtbWFyeSI+IzwvYT4gMy4gQ2xpY2sgdGhlIDxjb2RlPuKTmCBEZXRhaWxzPC9jb2RlPiBvbiB0aGUgc2VsZWN0ZWQgZW50cnkgKGhlcmU6IHRvcCBvbmUpIHlvdSB3aWxsIGdldCB0aGUgYnVpbGQgc3VtbWFyeTo8L2g0Pgo8cD48aW1nIHNyYz0iL2ltYWdlcy9zYm9tLWd1aWRlLWJzLWRldGFpbHMucG5nIiBhbHQ9ImltYWdlIj48L3A+CjxoNCBpZD0iXzQtc2VsZWN0LXRoZS1hcmNoaXRlY3R1cmUtb2YtdGhlLXBhY2thZ2UtYnVpbGQtYnktY2xpY2tpbmctdGhlLWNvcnJlc3BvbmRpbmctdGFiIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI180LXNlbGVjdC10aGUtYXJjaGl0ZWN0dXJlLW9mLXRoZS1wYWNrYWdlLWJ1aWxkLWJ5LWNsaWNraW5nLXRoZS1jb3JyZXNwb25kaW5nLXRhYiI+IzwvYT4gNC4gU2VsZWN0IHRoZSBhcmNoaXRlY3R1cmUgb2YgdGhlIHBhY2thZ2UgYnVpbGQgYnkgY2xpY2tpbmcgdGhlIGNvcnJlc3BvbmRpbmcgdGFiPC9oND4KPGg0IGlkPSJoZXJlLXg4Ni02NC13YXMtc2VsZWN0ZWQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaGVyZS14ODYtNjQtd2FzLXNlbGVjdGVkIj4jPC9hPiBIZXJlIDxzdHJvbmc+PGNvZGU+eDg2XzY0PC9jb2RlPjwvc3Ryb25nPiB3YXMgc2VsZWN0ZWQ6PC9oND4KPHA+PGltZyBzcmM9Ii9pbWFnZXMvc2JvbS1ndWlkZS1icy1zZWxlY3QtYXJjaC5wbmciIGFsdD0iaW1hZ2UiPjwvcD4KPGg0IGlkPSJfNS1ob3Zlci15b3VyLW1vdXNlLW92ZXItdGhlLWJsdWUta2V5LWljb24tdG8tcmV2ZWFsLXRoZS1ycG0tcGFja2FnZS1oYXNoIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI181LWhvdmVyLXlvdXItbW91c2Utb3Zlci10aGUtYmx1ZS1rZXktaWNvbi10by1yZXZlYWwtdGhlLXJwbS1wYWNrYWdlLWhhc2giPiM8L2E+IDUuIEhvdmVyIHlvdXIgbW91c2Ugb3ZlciB0aGUgYmx1ZSBrZXkgaWNvbiB0byByZXZlYWwgdGhlIDxjb2RlPnJwbS1wYWNrYWdlLWhhc2g8L2NvZGU+OjwvaDQ+CjxoNiBpZD0iY2xpY2stdG8tY29weS1pdC10by10aGUtY2xpcGJvYXJkIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2NsaWNrLXRvLWNvcHktaXQtdG8tdGhlLWNsaXBib2FyZCI+IzwvYT4gQ2xpY2sgdG8gY29weSBpdCB0byB0aGUgY2xpcGJvYXJkOjwvaDY+CjxwPjxpbWcgc3JjPSIvaW1hZ2VzL3Nib20tZ3VpZGUtYnMtcnBtLWhhc2gucG5nIiBhbHQ9ImltYWdlIj48L3A+CjxkaXYgY2xhc3M9ImN1c3RvbS1ibG9jayB0aXAiPjxwIGNsYXNzPSJjdXN0b20tYmxvY2stdGl0bGUiPlRJUDwvcD4KPHA+WW91IGNhbiBkb3dubG9hZCB0aGUgcGFja2FnZSBiaW5hcnkgYnkgY2xpY2tpbmcgb24gdGhlIGxpbmsgd2l0aCBpdHMgbmFtZS48L3A+CjwvZGl2Pgo8cD7CoDwvcD4KPGgzIGlkPSJhdXRoZW50aWNhdGlvbi11c2luZy1hLWhhc2gtb2J0YWluZWQtZnJvbS1idWlsZC1zZXJ2aWNlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2F1dGhlbnRpY2F0aW9uLXVzaW5nLWEtaGFzaC1vYnRhaW5lZC1mcm9tLWJ1aWxkLXNlcnZpY2UiPiM8L2E+IEF1dGhlbnRpY2F0aW9uIHVzaW5nIGEgaGFzaCBvYnRhaW5lZCBmcm9tIEJ1aWxkIFNlcnZpY2U8L2gzPgo8ZGl2IGNsYXNzPSJjdXN0b20tYmxvY2sgdGlwIj48cCBjbGFzcz0iY3VzdG9tLWJsb2NrLXRpdGxlIj5USVA8L3A+CjxwPlRoZSBjb21tYW5kIGlzIHRoZSBzYW1lIGFzIGFib3ZlLCBoZXJlIGp1c3Qgc2hvd3Mgb3V0cHV0IGluIGZvcm0gb2YgYSBzdGF0aWMgcGljdHVyZS48L3A+CjwvZGl2Pgo8cD5DYWxsIHRoZSA8Y29kZT5jYXM8L2NvZGU+IHRvb2wgcHJvdmlkaW5nIHRoZSBjb3BpZWQgPGNvZGU+cnBtLXBhY2thZ2UtaGFzaDwvY29kZT4gYXMgPGNvZGU+LS1oYXNoPC9jb2RlPiBwYXJhbWV0ZXIgdmFsdWU6PC9wPgo8IS0tYmVmb3JlYmVnaW4tLT48ZGl2IGNsYXNzPSJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiPjwhLS1hZnRlcmJlZ2luLS0+PHByZSB2LXByZSBjbGFzcz0ibGFuZ3VhZ2UtdGV4dCI+PGNvZGU+Y2FzIGF1dGhlbnRpY2F0ZSAtLXNpZ25lcklEPWNsb3VkLWluZnJhQGFsbWFsaW51eC5vcmcgLS1oYXNoIGVkMDYxZmFiMTdiOGYyNjlkNWZkNDIxYTE0ZDBlYzgxY2U1ZGMzNTdhM2ViZmZlMzNiNWJkMmE3NWU5ZGQ3MDQKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGg1IGlkPSJleGFtcGxlLW91dHB1dCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNleGFtcGxlLW91dHB1dCI+IzwvYT4gRXhhbXBsZSBvdXRwdXQ6PC9oNT4KPCEtLWJlZm9yZWJlZ2luLS0+PGRpdiBjbGFzcz0ibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIj48IS0tYWZ0ZXJiZWdpbi0tPjxwcmUgdi1wcmUgY2xhc3M9Imxhbmd1YWdlLXRleHQiPjxjb2RlPlthbG1hbGludXhfdXNlckBkZW1vaG9zdCB+XSQgY2FzIGF1dGhlbnRpY2F0ZSAtLXNpZ25lcklEPWNsb3VkLWluZnJhQGFsbWFsaW51eC5vcmcgLS1oYXNoIGVkMDYxZmFiMTdiOGYyNjlkNWZkNDIxYTE0ZDBlYzgxY2U1ZGMzNTdhM2ViZmZlMzNiNWJkMmE3NWU5ZGQ3MDQKQ0FTIHNhdmVkIGxvY2FsbHkgdGhlIHRydXN0ZWQgcHVibGljIGtleQpDQVMgYXV0b21hdGljYWxseSB0cnVzdGVkIHRoZSBzaWduYXR1cmUgZm91bmQgb24gY3VycmVudCBjb25uZWN0aW9uClVJRDoJCTE2NzQ1NjA3MTc3NzU0NTI5MzkKS2luZDoJCWZpbGUKTmFtZToJCWtlcm5lbC01LjE0LjAtMTYyLjEyLjEuZWw5XzEuc3JjLnJwbQpIYXNoOgkJZWQwNjFmYWIxN2I4ZjI2OWQ1ZmQ0MjFhMTRkMGVjODFjZTVkYzM1N2EzZWJmZmUzM2I1YmQyYTc1ZTlkZDcwNApTaXplOgkJMTM3IE1CClRpbWVzdGFtcDoJMjAyMy0wMS0yNCAxMTo0NToxNy43NzU0NTI5MzkgKzAwMDAgVVRDCkNvbnRlbnRUeXBlOglhcHBsaWNhdGlvbi94LXJwbQpNZXRhZGF0YToJYnVpbGRfYXJjaD0mcXVvdDtpNjg2JnF1b3Q7CgkJZXBvY2g9JnF1b3Q7Tm9uZSZxdW90OwoJCXJlbGVhc2U9JnF1b3Q7MTYyLjEyLjEuZWw5XzEmcXVvdDsKCQlzb3VyY2VycG09JnF1b3Q7Tm9uZSZxdW90OwoJCWFyY2g9JnF1b3Q7bm9hcmNoJnF1b3Q7CgkJYnVpbGRfaG9zdD0mcXVvdDt4NjQtYnVpbGRlcjAyLmFsbWFsaW51eC5vcmcmcXVvdDsKCQlnaXRfcmVmPSZxdW90O2NoYW5nZWQvYTkva2VybmVsLTUuMTQuMC0xNjIuMTIuMS5lbDlfMS5hbG1hJnF1b3Q7CgkJYWxtYV9jb21taXRfc2JvbV9oYXNoPSZxdW90O2VmOTBhODI1MmUzM2UwOTg2MGJlODY0ODJmNWM4YzlkOTMyMzkyZTM2MGE4MjhlZThlMGE1OGNkYmM0NTE4MDQmcXVvdDsKCQlnaXRfdXJsPSZxdW90O2h0dHBzOi8vZ2l0LmFsbWFsaW51eC5vcmcvcnBtcy9rZXJuZWwuZ2l0JnF1b3Q7CgkJdmVyc2lvbj0mcXVvdDs1LjE0LjAmcXVvdDsKCQlzb3VyY2VfdHlwZT0mcXVvdDtnaXQmcXVvdDsKCQlidWlsZF9pZD0mcXVvdDs1NjU3JnF1b3Q7CgkJYnVpbHRfYnk9JnF1b3Q7ZWFiZHVsbGluMSBcdTAwM2M1NTg5MjQ1NCtlYWJkdWxsaW4xQHVzZXJzLm5vcmVwbHkuZ2l0aHViLmNvbVx1MDAzZSZxdW90OwoJCWdpdF9jb21taXQ9JnF1b3Q7ZGVjNmFjYTdhMmI0ZjVhNWI1OWU2YjEwZWZkZTIxZTQ3ZmRhOTgyNyZxdW90OwoJCW5hbWU9JnF1b3Q7a2VybmVsJnF1b3Q7CgkJc2JvbV9hcGk9JnF1b3Q7MC4yJnF1b3Q7ClNpZ25lcklEOglZMnh2ZFdRdGFXNW1jbUZBWVd4dFlXeHBiblY0TG05eVp3PT0KQXBpa2V5IHJldm9rZWQ6CW5vClN0YXR1czoJCVRSVVNURUQKPC9jb2RlPjwvcHJlPgo8IS0tYmVmb3JlZW5kLS0+PC9kaXY+PCEtLWFmdGVyZW5kLS0+PGhyPgo8cD7CoDwvcD4KPGgyIGlkPSJ0cmFkZW1hcmstbm90aWNlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN0cmFkZW1hcmstbm90aWNlcyI+IzwvYT4gVHJhZGVtYXJrIG5vdGljZXM8L2gyPgo8cD5MaW51eMKuIGlzIHRoZSByZWdpc3RlcmVkIHRyYWRlbWFyayBvZiBMaW51cyBUb3J2YWxkcyBpbiB0aGUgVS5TLiBhbmQgb3RoZXIgY291bnRyaWVzLjwvcD4KPHA+bWFjT1MgYXJlIHRyYWRlbWFya3Mgb2YgQXBwbGUgSW5jLiwgcmVnaXN0ZXJlZCBpbiB0aGUgVS5TLiBhbmQgb3RoZXIgY291bnRyaWVzLjwvcD4KPHA+V2luZG93cyBpcyBhIHJlZ2lzdGVyZWQgdHJhZGVtYXJrIG9mIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbiBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgb3RoZXIgY291bnRyaWVzLjwvcD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}